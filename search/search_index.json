{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"SparkFun RTK Products This is the firmware, settings, and hardware documentation for the SparkFun RTK line of products: SparkFun RTK Surveyor (GPS-18443) SparkFun RTK Express (GPS-18442) SparkFun RTK Express Plus (GPS-18590) SparkFun RTK Facet (GPS-19029)","title":"SparkFun RTK Products"},{"location":"#sparkfun-rtk-products","text":"This is the firmware, settings, and hardware documentation for the SparkFun RTK line of products: SparkFun RTK Surveyor (GPS-18443) SparkFun RTK Express (GPS-18442) SparkFun RTK Express Plus (GPS-18590) SparkFun RTK Facet (GPS-19029)","title":"SparkFun RTK Products"},{"location":"configure_base/","text":"Base Menu In addition to providing accurate local location fixes, the SparkFun RTK devices can also serve as a correction source, also called a Base . The Base doesn't move and 'knows' where it is so it can calculate the discrepancies between the signals it is receiving and what it should be receiving. These differences are the correction values passed to the Rover so that the Rover can have millimeter level accuracy. There are two types of bases: Surveyed and Fixed . A surveyed base is often a temporary base setup in the field. Called a 'Survey-In', this is less accurate but requires only 60 seconds to complete. The 'Fixed' base is much more accurate but the precise location at which the antenna is located must be known. A fixed base is often a structure with an antenna bolted to the side. Raw satellite signals are gathered for a few hours then processed using Precision Point Position. We have a variety of tutorials that go into depth on these subjects but all you need to know is that the RTK Facet supports both Survey-In and Fixed Base techniques. The Base Menu allows the user to select between Survey-In or Fixed Base setups. Mode In Survey-In mode, the minimum observation time and Mean 3D Standard Deviation can be set. The defaults are 60s and 5m as directed by u-blox. The device will wait for the position accuracy to be better than 1 meter before a Survey-In is started. Don't be fooled; setting the observation time to 4 hours or an initial positional accuracy of 0.3m is not going to significantly improve the accuracy of the survey - use PPP instead. In Fixed mode, the coordinates of the antenna need to be sent. These can be entered in ECEF or Geographic coordinates. Whenever a user enters Base mode by pressing the SETUP button the GNSS receiver will immediately go into base mode with these coordinates and immediately begin outputting RTCM correction data. NTRIP Server NTRIP is where the real fun begins. The Base needs a method for getting the correction data to the Rover. This can be done using radios but that's limited to a few kilometers at best. If you've got WiFi reception, use the internet! Enabling NTRIP will present a handful of new options seen below: Settings for the NTRIP Server This is a powerful feature of the RTK line of products. The RTK device can be configured to transmit its RTCM directly over WiFi to the user's mountpoint. This eliminates the need for a radio link. Once the NTRIP server is enabled you will need a handful of credentials: Local WiFi SSID and password A casting service such as RTK2Go or Emlid (the port is almost always 2101) A mount point and password NTRIP Server Connected! With these credentials set, RTK device will attempt to connect to WiFi, your caster of choice, and begin transmitting the RTCM data over WiFi. We tried to make it as easy as possible. Every second a few hundred bytes, up to ~2k, will be transmitted to your mount point.","title":"Base Menu"},{"location":"configure_base/#base-menu","text":"In addition to providing accurate local location fixes, the SparkFun RTK devices can also serve as a correction source, also called a Base . The Base doesn't move and 'knows' where it is so it can calculate the discrepancies between the signals it is receiving and what it should be receiving. These differences are the correction values passed to the Rover so that the Rover can have millimeter level accuracy. There are two types of bases: Surveyed and Fixed . A surveyed base is often a temporary base setup in the field. Called a 'Survey-In', this is less accurate but requires only 60 seconds to complete. The 'Fixed' base is much more accurate but the precise location at which the antenna is located must be known. A fixed base is often a structure with an antenna bolted to the side. Raw satellite signals are gathered for a few hours then processed using Precision Point Position. We have a variety of tutorials that go into depth on these subjects but all you need to know is that the RTK Facet supports both Survey-In and Fixed Base techniques. The Base Menu allows the user to select between Survey-In or Fixed Base setups.","title":"Base Menu"},{"location":"configure_base/#mode","text":"In Survey-In mode, the minimum observation time and Mean 3D Standard Deviation can be set. The defaults are 60s and 5m as directed by u-blox. The device will wait for the position accuracy to be better than 1 meter before a Survey-In is started. Don't be fooled; setting the observation time to 4 hours or an initial positional accuracy of 0.3m is not going to significantly improve the accuracy of the survey - use PPP instead. In Fixed mode, the coordinates of the antenna need to be sent. These can be entered in ECEF or Geographic coordinates. Whenever a user enters Base mode by pressing the SETUP button the GNSS receiver will immediately go into base mode with these coordinates and immediately begin outputting RTCM correction data.","title":"Mode"},{"location":"configure_base/#ntrip-server","text":"NTRIP is where the real fun begins. The Base needs a method for getting the correction data to the Rover. This can be done using radios but that's limited to a few kilometers at best. If you've got WiFi reception, use the internet! Enabling NTRIP will present a handful of new options seen below: Settings for the NTRIP Server This is a powerful feature of the RTK line of products. The RTK device can be configured to transmit its RTCM directly over WiFi to the user's mountpoint. This eliminates the need for a radio link. Once the NTRIP server is enabled you will need a handful of credentials: Local WiFi SSID and password A casting service such as RTK2Go or Emlid (the port is almost always 2101) A mount point and password NTRIP Server Connected! With these credentials set, RTK device will attempt to connect to WiFi, your caster of choice, and begin transmitting the RTCM data over WiFi. We tried to make it as easy as possible. Every second a few hundred bytes, up to ~2k, will be transmitted to your mount point.","title":"NTRIP Server"},{"location":"configure_data_logging/","text":"Data Logging Menu RTK Facet Data Logging Configuration Menu From the Main Menu, pressing 5 will enter the Logging Menu. This menu will report the status of the microSD card. While you can enable logging, you cannot begin logging until a microSD card is inserted. Any FAT16 or FAT32 formatted microSD card up to 32GB will work. We regularly use the SparkX brand 1GB cards but note that these log files can get very large (>500MB) so plan accordingly. Option 1 will enable/disable logging. If logging is enabled, all messages from the ZED-F9P will be recorded to microSD. A log file is created at power on with the format SFE_[DeviceName]_YYMMDD_HHMMSS.txt based on current GPS data/time. The [DeviceName] is Surveyor, Express, etc. Option 2 allows a user to set the max logging time. This is convenient to determine the location of a fixed antenna or a receiver on a repeatable landmark. Set the RTK Facet to log RAWX data for 10 hours, convert to RINEX, run through an observation processing station and you\u2019ll get the corrected position with <10mm accuracy. Please see the How to Build a DIY GNSS Reference Station tutorial for more information. Option 3 allows a user to set the max logging length in minutes. Every 'max long length' amount of time the current log will be closed and a new log will be started. This is known as cyclic logging and is convenient on very long surveys (ie, months or years) to prevent logs from getting too unwieldy and helps limit the risk of log corruption. This will continue until the unit is powered down or the max logging time is reached. Note: If you are wanting to log RAWX sentences to create RINEX files useful for post processing the position of the receiver please see the GNSS Configuration Menu. For more information on how to use a RAWX GNSS log to get higher accuracy base location please see the How to Build a DIY GNSS Reference Station tutorial.","title":"Data Logging Menu"},{"location":"configure_data_logging/#data-logging-menu","text":"RTK Facet Data Logging Configuration Menu From the Main Menu, pressing 5 will enter the Logging Menu. This menu will report the status of the microSD card. While you can enable logging, you cannot begin logging until a microSD card is inserted. Any FAT16 or FAT32 formatted microSD card up to 32GB will work. We regularly use the SparkX brand 1GB cards but note that these log files can get very large (>500MB) so plan accordingly. Option 1 will enable/disable logging. If logging is enabled, all messages from the ZED-F9P will be recorded to microSD. A log file is created at power on with the format SFE_[DeviceName]_YYMMDD_HHMMSS.txt based on current GPS data/time. The [DeviceName] is Surveyor, Express, etc. Option 2 allows a user to set the max logging time. This is convenient to determine the location of a fixed antenna or a receiver on a repeatable landmark. Set the RTK Facet to log RAWX data for 10 hours, convert to RINEX, run through an observation processing station and you\u2019ll get the corrected position with <10mm accuracy. Please see the How to Build a DIY GNSS Reference Station tutorial for more information. Option 3 allows a user to set the max logging length in minutes. Every 'max long length' amount of time the current log will be closed and a new log will be started. This is known as cyclic logging and is convenient on very long surveys (ie, months or years) to prevent logs from getting too unwieldy and helps limit the risk of log corruption. This will continue until the unit is powered down or the max logging time is reached. Note: If you are wanting to log RAWX sentences to create RINEX files useful for post processing the position of the receiver please see the GNSS Configuration Menu. For more information on how to use a RAWX GNSS log to get higher accuracy base location please see the How to Build a DIY GNSS Reference Station tutorial.","title":"Data Logging Menu"},{"location":"configure_gnss_receiver/","text":"GNSS Receiver Menu From the main menu, pressing 1 will bring up the GNSS Receiver configuration menu. The ZED-F9P is immensely configurable. The RTK device will, by default, put the ZED-F9P into the most common configuration for rover/base RTK for use with SW Maps . The GNSS Receiver menu allows a user to change the report rate, dynamic model, and select which constellations should be used for fix calculations. GNSS menu showing measurement rates and dynamic model Measurement Frequency Measurement Frequency can be set by either Hz or by seconds between measurements. Some users need many measurements per second; the RTK Facet supports up to 20Hz with RTK enabled. Some users are doing very long static surveys that require many seconds between measurements; RTK Facet supports up to 8255 seconds (137 minutes) between readings. Note: When in base mode, measurement frequency is set to 1Hz. This is because RTK transmission does not benefit from faster updates, nor does logging of RAWX for PPP. Dynamic Model The Dynamic Model can be changed but it is recommended to leave as Portable . For more information, please refer to the ZED-F9P Integration Manual . Enable or disable the constellations used for fixes Constellations Menu The ZED-F9P is capable of tracking 184 channels across four constellations and two bands (L1/L2) including GPS (USA), Galileo (EU), BeiDou (China), and GLONASS (Russia). SBAS (satellite-based augmentation system) is also supported. By fault, all constellations are used. Some users may want to study, log, or monitor a subset. Disabling a constellation will cause the ZED to ignore those signals when calculating a location fix. NTRIP Client NTRIP Client enabled showing settings The SparkFun RTK devices can obtain their correction data over a few different methods: Bluetooth - This is the most common. An app running on a tablet or phone has an NTRIP client built into it. Once the phone is connected over Bluetooth SPP, the RTCM is sent from the phone to the RTK device. Radio - A base RTK unit and a rover have serial radios plugged into the RADIO port. RTCM data generated by the base station is set over the radio to the rover. WiFi - The rover uses WiFi to be an NTRIP Client and connect to an NTRIP Caster. By enabling NTRIP Client, the RTK device will disable Bluetooth and instead use WiFi to connect to the caster of your choice. This is helpful in situations where a 'headless' system (no phone or tablet) is needed and the rover will be near a WiFi access point. Once the NTRIP Client is enabled you will need a handful of credentials: Local WiFi SSID and password (WPA2) A casting service and port such as RTK2Go or Emlid (the port is almost always 2101) A mount point and password With these credentials set, RTK device will attempt to connect to WiFi, then connect to your caster of choice, and then begin downloading the RTCM data over WiFi. We tried to make it as easy as possible. Every second a few hundred bytes, up to ~2k, will be downloaded from the mount point you've entered. Remember, the rover must be in WiFi range to connect in this mode. Rover with Active NTRIP Client Connection Once the device connects to WiFi, it will attempt to connect to the user's chosen NTRIP Caster. If WiFi or the NTRIP connection fails, the rover will return to normal operation.","title":"GNSS Receiver Menu"},{"location":"configure_gnss_receiver/#gnss-receiver-menu","text":"From the main menu, pressing 1 will bring up the GNSS Receiver configuration menu. The ZED-F9P is immensely configurable. The RTK device will, by default, put the ZED-F9P into the most common configuration for rover/base RTK for use with SW Maps . The GNSS Receiver menu allows a user to change the report rate, dynamic model, and select which constellations should be used for fix calculations. GNSS menu showing measurement rates and dynamic model","title":"GNSS Receiver Menu"},{"location":"configure_gnss_receiver/#measurement-frequency","text":"Measurement Frequency can be set by either Hz or by seconds between measurements. Some users need many measurements per second; the RTK Facet supports up to 20Hz with RTK enabled. Some users are doing very long static surveys that require many seconds between measurements; RTK Facet supports up to 8255 seconds (137 minutes) between readings. Note: When in base mode, measurement frequency is set to 1Hz. This is because RTK transmission does not benefit from faster updates, nor does logging of RAWX for PPP.","title":"Measurement Frequency"},{"location":"configure_gnss_receiver/#dynamic-model","text":"The Dynamic Model can be changed but it is recommended to leave as Portable . For more information, please refer to the ZED-F9P Integration Manual . Enable or disable the constellations used for fixes","title":"Dynamic Model"},{"location":"configure_gnss_receiver/#constellations-menu","text":"The ZED-F9P is capable of tracking 184 channels across four constellations and two bands (L1/L2) including GPS (USA), Galileo (EU), BeiDou (China), and GLONASS (Russia). SBAS (satellite-based augmentation system) is also supported. By fault, all constellations are used. Some users may want to study, log, or monitor a subset. Disabling a constellation will cause the ZED to ignore those signals when calculating a location fix.","title":"Constellations Menu"},{"location":"configure_gnss_receiver/#ntrip-client","text":"NTRIP Client enabled showing settings The SparkFun RTK devices can obtain their correction data over a few different methods: Bluetooth - This is the most common. An app running on a tablet or phone has an NTRIP client built into it. Once the phone is connected over Bluetooth SPP, the RTCM is sent from the phone to the RTK device. Radio - A base RTK unit and a rover have serial radios plugged into the RADIO port. RTCM data generated by the base station is set over the radio to the rover. WiFi - The rover uses WiFi to be an NTRIP Client and connect to an NTRIP Caster. By enabling NTRIP Client, the RTK device will disable Bluetooth and instead use WiFi to connect to the caster of your choice. This is helpful in situations where a 'headless' system (no phone or tablet) is needed and the rover will be near a WiFi access point. Once the NTRIP Client is enabled you will need a handful of credentials: Local WiFi SSID and password (WPA2) A casting service and port such as RTK2Go or Emlid (the port is almost always 2101) A mount point and password With these credentials set, RTK device will attempt to connect to WiFi, then connect to your caster of choice, and then begin downloading the RTCM data over WiFi. We tried to make it as easy as possible. Every second a few hundred bytes, up to ~2k, will be downloaded from the mount point you've entered. Remember, the rover must be in WiFi range to connect in this mode. Rover with Active NTRIP Client Connection Once the device connects to WiFi, it will attempt to connect to the user's chosen NTRIP Caster. If WiFi or the NTRIP connection fails, the rover will return to normal operation.","title":"NTRIP Client"},{"location":"configure_lband/","text":"L-Band Menu Note: This section only applies to RTK Facet L-Band products. Regular RTK Facet, Surveyor, Express, and Express Plus products do not have L-Band antennas or receivers built in. L-Band Menu showing Home WiFi credentials RTK Facet L-Band products are equipped with a special antenna and extra receiver to decrypted the L-Band corrections using the PointPerfect service from u-blox. The L-Band sub menu allows a user to enter their 'Home' WiFi settings. This WiFi SSID and password are used to regularly obtain the needed decryption keys from u-blox. This is normally your home WiFi or other accessible WiFi. L-Band decryption keys are valid for a maximum of 56 days. During that time, the RTK Facet L-Band can operate normally without the need for WiFi access. However, when the keys are set to expire in 28 days or less, the RTK Facet L-Band will attempt to log in to the 'Home' WiFi at each power on. If WiFi is not available, it will continue normal operation. Display showing 14 days until L-Band Keys Expire The unit will display various messages to aid the user in obtaining keys as needed. Three pronged satellite dish indicating L-Band reception Upon successful reception and decryption of L-Band corrections, the satellite dish icon will increase to a three pronged icon. As the unit's fix increases the cross hair will indicate a basic 3D solution, a double blinking cross hair will indicate a floating RTK solution, and a solid double cross hair will indicate a fixed RTK solution. L-Band Menu showing Home WiFi credentials In addition to allowing the entry of WiFi credentials, the L-Band Menu will display the Device ID. This is needed when a SparkFun RTK Facet L-Band product needs to be added to the PointPerfect system. This is normally taken care of when you purchase the L-Band unit with PointPerfect service added, but for customers who did not purchase the service and want to add it at a later date, this Device ID is what customer service needs. The Days until keys expire inform the user how many days the unit has until it needs to connect to WiFi to obtain new keys. Option '1' disables the use of L-Band corrections. Option '2' or '3' enables the entry of WiFi credentials used for obtaining new keys from the PointPerfect API. Option '4' disables the automatic attempts at WiFi connections when key expiry is less than 28 days. Option '5' will trigger an immediate attempt to connect over WiFi and update the keys. Option 'k' will bring up the Manual Key Entry menu. Manual Key Entry Menu Because of the length and complexity of the keys, we do not recommend you manually enter them. This menu is most helpful for displaying the current keys. Option '1' will allow a user to enter their own Device Profile Token. This is the token that is used to provision a device on a PointPerfect account. By default, users may use the SparkFun token but must pay SparkFun for the annual service fee. If an organization would like to administer their own devices, the token can be changed here.","title":"L-Band Menu"},{"location":"configure_lband/#l-band-menu","text":"Note: This section only applies to RTK Facet L-Band products. Regular RTK Facet, Surveyor, Express, and Express Plus products do not have L-Band antennas or receivers built in. L-Band Menu showing Home WiFi credentials RTK Facet L-Band products are equipped with a special antenna and extra receiver to decrypted the L-Band corrections using the PointPerfect service from u-blox. The L-Band sub menu allows a user to enter their 'Home' WiFi settings. This WiFi SSID and password are used to regularly obtain the needed decryption keys from u-blox. This is normally your home WiFi or other accessible WiFi. L-Band decryption keys are valid for a maximum of 56 days. During that time, the RTK Facet L-Band can operate normally without the need for WiFi access. However, when the keys are set to expire in 28 days or less, the RTK Facet L-Band will attempt to log in to the 'Home' WiFi at each power on. If WiFi is not available, it will continue normal operation. Display showing 14 days until L-Band Keys Expire The unit will display various messages to aid the user in obtaining keys as needed. Three pronged satellite dish indicating L-Band reception Upon successful reception and decryption of L-Band corrections, the satellite dish icon will increase to a three pronged icon. As the unit's fix increases the cross hair will indicate a basic 3D solution, a double blinking cross hair will indicate a floating RTK solution, and a solid double cross hair will indicate a fixed RTK solution. L-Band Menu showing Home WiFi credentials In addition to allowing the entry of WiFi credentials, the L-Band Menu will display the Device ID. This is needed when a SparkFun RTK Facet L-Band product needs to be added to the PointPerfect system. This is normally taken care of when you purchase the L-Band unit with PointPerfect service added, but for customers who did not purchase the service and want to add it at a later date, this Device ID is what customer service needs. The Days until keys expire inform the user how many days the unit has until it needs to connect to WiFi to obtain new keys. Option '1' disables the use of L-Band corrections. Option '2' or '3' enables the entry of WiFi credentials used for obtaining new keys from the PointPerfect API. Option '4' disables the automatic attempts at WiFi connections when key expiry is less than 28 days. Option '5' will trigger an immediate attempt to connect over WiFi and update the keys. Option 'k' will bring up the Manual Key Entry menu. Manual Key Entry Menu Because of the length and complexity of the keys, we do not recommend you manually enter them. This menu is most helpful for displaying the current keys. Option '1' will allow a user to enter their own Device Profile Token. This is the token that is used to provision a device on a PointPerfect account. By default, users may use the SparkFun token but must pay SparkFun for the annual service fee. If an organization would like to administer their own devices, the token can be changed here.","title":"L-Band Menu"},{"location":"configure_messages/","text":"Messages Menu The messages configuration menu From this menu a user can control the output of various NMEA, RTCM, RXM, and other messages. Any enabled message will be broadcast over Bluetooth and recorded to SD (if available). Because of the large number of configurations possible, we provide a few common settings: Reset to Surveying Defaults (NMEAx5) Reset to PPP Logging Defaults (NMEAx5 + RXMx2) Turn off all messages Turn on all messages Reset to Surveying Defaults (NMEAx5) will turn off all messages and enable the following messages: NMEA-GGA, NMEA-SGA, NMEA-GST, NMEA-GSV, NMEA-RMC These five NMEA sentences are commonly used with SW Maps for general surveying. Reset to PPP Logging Defaults (NMEAx5 + RXMx2) will turn off all messages and enable the following messages: NMEA-GGA, NMEA-SGA, NMEA-GST, NMEA-GSV, NMEA-RMC, RXM-RAWX, RXM-SFRBX These seven sentences are commonly used when logging and doing Precise Point Positioning (PPP) or Post Processed Kinematics (PPK). You can read more about PPP here . Turn off all messages will turn off all messages. This is handy for advanced users who need to start from a blank slate. Turn on all messages will turn on all messages. This is a setting used for firmware testing and should not be needed in normal use. Configuring the NMEA messages As mentioned is the microSD section of the Hardware Overview there are a large number of messages supported. Each message sub menu will present the user with the ability to set the message report rate. Note: The message report rate is the number of fixes between message reports. In the image above, with GSV set to 4, the NMEA GSV message will be produced once every 4 fixes. Because the device defaults to 4Hz fix rate, the GSV message will appear once per second.","title":"Messages Menu"},{"location":"configure_messages/#messages-menu","text":"The messages configuration menu From this menu a user can control the output of various NMEA, RTCM, RXM, and other messages. Any enabled message will be broadcast over Bluetooth and recorded to SD (if available). Because of the large number of configurations possible, we provide a few common settings: Reset to Surveying Defaults (NMEAx5) Reset to PPP Logging Defaults (NMEAx5 + RXMx2) Turn off all messages Turn on all messages Reset to Surveying Defaults (NMEAx5) will turn off all messages and enable the following messages: NMEA-GGA, NMEA-SGA, NMEA-GST, NMEA-GSV, NMEA-RMC These five NMEA sentences are commonly used with SW Maps for general surveying. Reset to PPP Logging Defaults (NMEAx5 + RXMx2) will turn off all messages and enable the following messages: NMEA-GGA, NMEA-SGA, NMEA-GST, NMEA-GSV, NMEA-RMC, RXM-RAWX, RXM-SFRBX These seven sentences are commonly used when logging and doing Precise Point Positioning (PPP) or Post Processed Kinematics (PPK). You can read more about PPP here . Turn off all messages will turn off all messages. This is handy for advanced users who need to start from a blank slate. Turn on all messages will turn on all messages. This is a setting used for firmware testing and should not be needed in normal use. Configuring the NMEA messages As mentioned is the microSD section of the Hardware Overview there are a large number of messages supported. Each message sub menu will present the user with the ability to set the message report rate. Note: The message report rate is the number of fixes between message reports. In the image above, with GSV set to 4, the NMEA GSV message will be produced once every 4 fixes. Because the device defaults to 4Hz fix rate, the GSV message will appear once per second.","title":"Messages Menu"},{"location":"configure_ports/","text":"Ports Menu Baud rate configuration of Radio and Data ports By default the Radio port is set to 57600bps to match the Serial Telemetry Radios that are recommended to be used with the RTK Facet (it is a plug and play solution). This can be set from 4800bps to 921600bps. By default the Data port is set to 460800bps and can be configured from 4800bps to 921600bps. The 460800bps baud rate was chosen to support applications where a large number of messages are enabled and a large amount of data is being sent. If you need to decrease the baud rate to 115200bps or other, but be sure to monitor the MON-COMM message within u-center for buffer overruns. A baud rate of 115200bps and the NMEA+RXM default configuration at 4Hz will cause buffer overruns. Monitoring the COM ports on the ZED-F9P If you must run the data port at lower than 460800bps, and you need to enable a large number of messages and/or increase the fix frequency beyond 4Hz, be sure to verify that UART1 usage stays below 99%. The image above shows the UART1 becoming overwhelmed because the ZED cannot transmit at 115200bps fast enough. Surveyor Data Port By default the Data port is set to 460800bps and can be configured from 4800bps to 921600bps. Note: The Data port does not output NMEA by default. The unit must be opened and the Serial NMEA Connection switch must be moved to 'Ext Connector'. See Hardware Overview - Advanced Features for the location of the switch. Facet / Express / Express Plus Data Port The Data port on the RTK Facet, Express, and Express Plus is very flexible. It can be configured in four different ways: Internally the Data connector is connected to a digital mux allowing one of four software selectable setups. By default the Data port will be connected to the UART1 of the ZED-F9P and output any messages via serial. NMEA - The TX pin outputs any enabled messages (NMEA, UBX, and RTCM) at a default of 460,800bps (configurable 9600 to 921600bps). The RX pin can receive RTCM for RTK and can also receive UBX configuration commands if desired. PPS/Trigger - The TX pin outputs the pulse-per-second signal that is accurate to 30ns RMS. The RX pin is connected to the EXTINT pin on the ZED-F9P allowing for events to be measured with incredibly accurate nano-second resolution. Useful for things like audio triangulation. See the Timemark section of the ZED-F9P Integration Manual for more information. I2C - The TX pin operates as SCL, RX pin as SDA on the I2C bus. This allows additional sensors to be connected to the I2C bus. GPIO - The TX pin operates as a DAC capable GPIO on the ESP32. The RX pin operates as a ADC capable input on the ESP32. This is useful for custom applications. Most applications do not need to plug anything into the Data port. Most users will get their NMEA position data over Bluetooth. However, this port can be useful for sending position data to an embedded microcontroller or single board computer. The pinout is 3.3V / TX / RX / GND. 3.3V is provided by this connector to power a remote device if needed. While the port is capable of sourcing up to 600mA, we do not recommend more than 300mA. This port should not be connected to a power source.","title":"Ports Menu"},{"location":"configure_ports/#ports-menu","text":"Baud rate configuration of Radio and Data ports By default the Radio port is set to 57600bps to match the Serial Telemetry Radios that are recommended to be used with the RTK Facet (it is a plug and play solution). This can be set from 4800bps to 921600bps. By default the Data port is set to 460800bps and can be configured from 4800bps to 921600bps. The 460800bps baud rate was chosen to support applications where a large number of messages are enabled and a large amount of data is being sent. If you need to decrease the baud rate to 115200bps or other, but be sure to monitor the MON-COMM message within u-center for buffer overruns. A baud rate of 115200bps and the NMEA+RXM default configuration at 4Hz will cause buffer overruns. Monitoring the COM ports on the ZED-F9P If you must run the data port at lower than 460800bps, and you need to enable a large number of messages and/or increase the fix frequency beyond 4Hz, be sure to verify that UART1 usage stays below 99%. The image above shows the UART1 becoming overwhelmed because the ZED cannot transmit at 115200bps fast enough.","title":"Ports Menu"},{"location":"configure_ports/#surveyor-data-port","text":"By default the Data port is set to 460800bps and can be configured from 4800bps to 921600bps. Note: The Data port does not output NMEA by default. The unit must be opened and the Serial NMEA Connection switch must be moved to 'Ext Connector'. See Hardware Overview - Advanced Features for the location of the switch.","title":"Surveyor Data Port"},{"location":"configure_ports/#facet-express-express-plus-data-port","text":"The Data port on the RTK Facet, Express, and Express Plus is very flexible. It can be configured in four different ways: Internally the Data connector is connected to a digital mux allowing one of four software selectable setups. By default the Data port will be connected to the UART1 of the ZED-F9P and output any messages via serial. NMEA - The TX pin outputs any enabled messages (NMEA, UBX, and RTCM) at a default of 460,800bps (configurable 9600 to 921600bps). The RX pin can receive RTCM for RTK and can also receive UBX configuration commands if desired. PPS/Trigger - The TX pin outputs the pulse-per-second signal that is accurate to 30ns RMS. The RX pin is connected to the EXTINT pin on the ZED-F9P allowing for events to be measured with incredibly accurate nano-second resolution. Useful for things like audio triangulation. See the Timemark section of the ZED-F9P Integration Manual for more information. I2C - The TX pin operates as SCL, RX pin as SDA on the I2C bus. This allows additional sensors to be connected to the I2C bus. GPIO - The TX pin operates as a DAC capable GPIO on the ESP32. The RX pin operates as a ADC capable input on the ESP32. This is useful for custom applications. Most applications do not need to plug anything into the Data port. Most users will get their NMEA position data over Bluetooth. However, this port can be useful for sending position data to an embedded microcontroller or single board computer. The pinout is 3.3V / TX / RX / GND. 3.3V is provided by this connector to power a remote device if needed. While the port is capable of sourcing up to 600mA, we do not recommend more than 300mA. This port should not be connected to a power source.","title":"Facet / Express / Express Plus Data Port"},{"location":"configure_profiles/","text":"Profiles Menu User Profiles Menu Profiles are a very powerful feature. A profile is a complete copy of all the settings on the RTK product. Switching profiles changes all the settings in one step. This is handy for creating a complex setup for surveying, and a different setup for a NTRIP enabled base station. Rather than changing the variety of parameters, a user can simply switch profiles. Multiple Profiles on Menu If more than one profile is defined, the profiles will be displayed and selectable by using the Power/Setup on the Facet or Setup on the Express and Express Plus. Profiles can be named up to 50 characters; only the first 7 characters will be shown on the menu. Surveyor Profiles Because the Surveyor does not have a display, profiles are not available. The Base/Rover switch allows simple pre-set configurations to be toggled.","title":"Profiles Menu"},{"location":"configure_profiles/#profiles-menu","text":"User Profiles Menu Profiles are a very powerful feature. A profile is a complete copy of all the settings on the RTK product. Switching profiles changes all the settings in one step. This is handy for creating a complex setup for surveying, and a different setup for a NTRIP enabled base station. Rather than changing the variety of parameters, a user can simply switch profiles. Multiple Profiles on Menu If more than one profile is defined, the profiles will be displayed and selectable by using the Power/Setup on the Facet or Setup on the Express and Express Plus. Profiles can be named up to 50 characters; only the first 7 characters will be shown on the menu.","title":"Profiles Menu"},{"location":"configure_profiles/#surveyor-profiles","text":"Because the Surveyor does not have a display, profiles are not available. The Base/Rover switch allows simple pre-set configurations to be toggled.","title":"Surveyor Profiles"},{"location":"configure_ucenter/","text":"Configuring ZED-F9P with u-center Note: Because the ESP32 does considerable configuration of the ZED-F9P at power on it is not recommended to modify the settings of the ZED-F9P. Nothing will break but your changes may be overwritten. The ZED-F9P module can be configured independently using the u-center software from u-blox by connecting a USB cable to the Config u-blox USB connector. Settings can be saved to the module between power cycles. For more information please see SparkFun\u2019s Getting Started with u-center by u-blox .","title":"Configuring ZED-F9P with u-center"},{"location":"configure_ucenter/#configuring-zed-f9p-with-u-center","text":"Note: Because the ESP32 does considerable configuration of the ZED-F9P at power on it is not recommended to modify the settings of the ZED-F9P. Nothing will break but your changes may be overwritten. The ZED-F9P module can be configured independently using the u-center software from u-blox by connecting a USB cable to the Config u-blox USB connector. Settings can be saved to the module between power cycles. For more information please see SparkFun\u2019s Getting Started with u-center by u-blox .","title":"Configuring ZED-F9P with u-center"},{"location":"configure_with_serial/","text":"Configure with Serial Surveyor: Yes* / Express: Yes / Express Plus: Yes / Facet: Yes To configure an RTK device using serial attach a USB C cable to the device. The device can be on or off. RTK Surveyor / Express / Express+ The SparkFun RTK Surveyor has a variety of connectors Connect the USB cable to the connector labeled Config ESP32 . Once connected a COM port will enumerate. Open the Device Manager in Windows and look under the Ports branch to see what COM port the device is assigned to. RTK Facet Connect the USB cable to the USB connector. There is a USB hub built into the RTK Facet. When you attach the device to your computer it will enumerate as two COM ports. In the image above, the USB Serial Device is the ZED-F9P and the USB-SERIAL CH340 is the ESP32. Don't See 'USB-Serial CH340'? If you've never connected a CH340 device to your computer before, you may need to install drivers for the USB-to-serial converter. Check out our section on \"How to Install CH340 Drivers\" for help with the installation. Don't See 'USB Serial Device'? The first time a u-blox module is connected to a computer you may need to adjust the COM driver. Check out our section on \"How to Install u-blox Drivers\" for help with the installation. Configuring the RTK device is done over the USB-Serial CH340 COM port via serial text menu. Various debug messages are printed to this port at 115200bps and a serial menu can be opened to configure advanced settings. Configuring the ZED-F9P is done over the USB Serial Device port using u-center . It\u2019s not necessary in normal operation but is handy for tailoring the receiver to specific applications. As an added perk, the ZED-F9P can be detected automatically by some mobile phones and tablets. If desired, the receiver can be directly connected to a compatible phone or tablet removing the need for a Bluetooth connection. Open a terminal window at 115200bps; you should see various status messages every second. Press any key to open the configuration menu. Not sure how to use a terminal? Checkout our Serial Terminal Basics tutorial. Main Menu Pressing any button will display the Main menu. The Main menu will display the current firmware version and the Bluetooth broadcast name. Note: When powered on, the RTK Facet will broadcast itself as either Facet Rover-XXXX or Facet Base-XXXX depending on which state it is in. The menus will timeout after 15 seconds of inactivity, so if you do not press a key the device will exit the menu and return to reporting status messages after 15 seconds.","title":"Configure with Serial"},{"location":"configure_with_serial/#configure-with-serial","text":"Surveyor: Yes* / Express: Yes / Express Plus: Yes / Facet: Yes To configure an RTK device using serial attach a USB C cable to the device. The device can be on or off.","title":"Configure with Serial"},{"location":"configure_with_serial/#rtk-surveyor-express-express","text":"The SparkFun RTK Surveyor has a variety of connectors Connect the USB cable to the connector labeled Config ESP32 . Once connected a COM port will enumerate. Open the Device Manager in Windows and look under the Ports branch to see what COM port the device is assigned to.","title":"RTK Surveyor / Express / Express+"},{"location":"configure_with_serial/#rtk-facet","text":"Connect the USB cable to the USB connector. There is a USB hub built into the RTK Facet. When you attach the device to your computer it will enumerate as two COM ports. In the image above, the USB Serial Device is the ZED-F9P and the USB-SERIAL CH340 is the ESP32. Don't See 'USB-Serial CH340'? If you've never connected a CH340 device to your computer before, you may need to install drivers for the USB-to-serial converter. Check out our section on \"How to Install CH340 Drivers\" for help with the installation. Don't See 'USB Serial Device'? The first time a u-blox module is connected to a computer you may need to adjust the COM driver. Check out our section on \"How to Install u-blox Drivers\" for help with the installation. Configuring the RTK device is done over the USB-Serial CH340 COM port via serial text menu. Various debug messages are printed to this port at 115200bps and a serial menu can be opened to configure advanced settings. Configuring the ZED-F9P is done over the USB Serial Device port using u-center . It\u2019s not necessary in normal operation but is handy for tailoring the receiver to specific applications. As an added perk, the ZED-F9P can be detected automatically by some mobile phones and tablets. If desired, the receiver can be directly connected to a compatible phone or tablet removing the need for a Bluetooth connection. Open a terminal window at 115200bps; you should see various status messages every second. Press any key to open the configuration menu. Not sure how to use a terminal? Checkout our Serial Terminal Basics tutorial. Main Menu Pressing any button will display the Main menu. The Main menu will display the current firmware version and the Bluetooth broadcast name. Note: When powered on, the RTK Facet will broadcast itself as either Facet Rover-XXXX or Facet Base-XXXX depending on which state it is in. The menus will timeout after 15 seconds of inactivity, so if you do not press a key the device will exit the menu and return to reporting status messages after 15 seconds.","title":"RTK Facet"},{"location":"configure_with_settings_file/","text":"Configure with Settings File Surveyor: Yes / Express: Yes / Express Plus: Yes / Facet: Yes SparkFun RTK Settings File Note: All system configuration can also be done by editing the SFE_XXX_Settings_0.txt file (example shown above) where XXX is Facet, Express, Surveyor, etc and 0 is the profile number (0, 1, 2, 3). This file is created when a microSD card is installed. The settings are clear text but there are no safety guards against setting illegal states. It is not recommended to use this method unless You Know What You're Doing\u00ae.","title":"Configure with Settings File"},{"location":"configure_with_settings_file/#configure-with-settings-file","text":"Surveyor: Yes / Express: Yes / Express Plus: Yes / Facet: Yes SparkFun RTK Settings File Note: All system configuration can also be done by editing the SFE_XXX_Settings_0.txt file (example shown above) where XXX is Facet, Express, Surveyor, etc and 0 is the profile number (0, 1, 2, 3). This file is created when a microSD card is installed. The settings are clear text but there are no safety guards against setting illegal states. It is not recommended to use this method unless You Know What You're Doing\u00ae.","title":"Configure with Settings File"},{"location":"configure_with_wifi/","text":"Configure with WiFi Surveyor: Yes* / Express: Yes / Express Plus: Yes / Facet: Yes Starting with firmware v1.7, WiFi based configuration is supported. For more information about updating the firmware on your device, please see Firmware Updates and Customization . The RTK device will present a webpage that is viewable from either a desktop/laptop with WiFi or a cell phone. For advanced configurations, a desktop is recommended. For quick in-field changes, a cell phone works great. Desktop vs Phone display size configuration RTK Express / Facet To get into WiFi configuration follow these steps: Power on the RTK Express or Facet. Once the device has started press the Setup button repeatedly until the Config menu is highlighted. The display will blink a WiFi icon indicating it is waiting for incoming connections. Connect to WiFi network named \u2018RTK Config\u2019. Open a browser (Chrome is preferred) and type 192.168.4.1 into the address bar. Device ready for cellphone configuration RTK Surveyor To get into WiFi configuration follow these steps: Power the RTK Surveyor on in Rover mode. Once the device has started the Bluetooth status LED should be blinking at 1Hz. Now toggle the SETUP switch from Base and back to Rover within 1 second. If successful, the Bluetooth status LED will begin fading in/out. The device is now broadcasting as a WiFi access point. Connect to WiFi network named \u2018RTK Config\u2019. Open a browser (Chrome is preferred) and type 192.168.4.1 into the address bar. The WiFi network RTK Config as seen from a cellphone Note: Upon connecting, your phone may warn you that this WiFi network has no internet. That's ok. Stay connected to the network and open a browser. Connected to the RTK WiFi Setup Page Clicking on a category 'carrot' will open or close that section. Clicking on an \u2018i\u2019 will give you a brief description of the options within that section. This unit has firmware version 1.8 and a ZED-F9P receiver Please note that the firmware for the RTK device and the firmware for the ZED receiver are shown at the top of the page. This can be helpful when troubleshooting or requesting new features.","title":"Configure with WiFi"},{"location":"configure_with_wifi/#configure-with-wifi","text":"Surveyor: Yes* / Express: Yes / Express Plus: Yes / Facet: Yes Starting with firmware v1.7, WiFi based configuration is supported. For more information about updating the firmware on your device, please see Firmware Updates and Customization . The RTK device will present a webpage that is viewable from either a desktop/laptop with WiFi or a cell phone. For advanced configurations, a desktop is recommended. For quick in-field changes, a cell phone works great. Desktop vs Phone display size configuration","title":"Configure with WiFi"},{"location":"configure_with_wifi/#rtk-express-facet","text":"To get into WiFi configuration follow these steps: Power on the RTK Express or Facet. Once the device has started press the Setup button repeatedly until the Config menu is highlighted. The display will blink a WiFi icon indicating it is waiting for incoming connections. Connect to WiFi network named \u2018RTK Config\u2019. Open a browser (Chrome is preferred) and type 192.168.4.1 into the address bar. Device ready for cellphone configuration","title":"RTK Express / Facet"},{"location":"configure_with_wifi/#rtk-surveyor","text":"To get into WiFi configuration follow these steps: Power the RTK Surveyor on in Rover mode. Once the device has started the Bluetooth status LED should be blinking at 1Hz. Now toggle the SETUP switch from Base and back to Rover within 1 second. If successful, the Bluetooth status LED will begin fading in/out. The device is now broadcasting as a WiFi access point. Connect to WiFi network named \u2018RTK Config\u2019. Open a browser (Chrome is preferred) and type 192.168.4.1 into the address bar. The WiFi network RTK Config as seen from a cellphone Note: Upon connecting, your phone may warn you that this WiFi network has no internet. That's ok. Stay connected to the network and open a browser. Connected to the RTK WiFi Setup Page Clicking on a category 'carrot' will open or close that section. Clicking on an \u2018i\u2019 will give you a brief description of the options within that section. This unit has firmware version 1.8 and a ZED-F9P receiver Please note that the firmware for the RTK device and the firmware for the ZED receiver are shown at the top of the page. This can be helpful when troubleshooting or requesting new features.","title":"RTK Surveyor"},{"location":"firmware_intro/","text":"Introduction Out of the box, the SparkFun RTK products are exceptional GNSS receivers out-of-box and can be used with little or no configuration. This tutorial is for advanced setups and for users looking to learn every knob that can be turned. The line of RTK products offered by SparkFun all run identical firmware. The RTK firmware and this guide cover the following products: SparkFun RTK Surveyor (GPS-18443) SparkFun RTK Express (GPS-18442) SparkFun RTK Express Plus (GPS-18590) SparkFun RTK Facet (GPS-19029) Depending on the hardware platform different features may or may not be supported. We will denote each product in each section so that you know what is supported. If you have an issue, feature request, bug report, or a general question about the RTK firmware specifically we encourage you to post your comments on the firmware's repository . If you feel like bragging or showing off what you did with your RTK product, we'd be thrilled to hear about it on the issues list as well! Things like how to attach an antenna or other hardware specific topics are best read on the Hookup Guides for the individual products:","title":"Introduction"},{"location":"firmware_intro/#introduction","text":"Out of the box, the SparkFun RTK products are exceptional GNSS receivers out-of-box and can be used with little or no configuration. This tutorial is for advanced setups and for users looking to learn every knob that can be turned. The line of RTK products offered by SparkFun all run identical firmware. The RTK firmware and this guide cover the following products: SparkFun RTK Surveyor (GPS-18443) SparkFun RTK Express (GPS-18442) SparkFun RTK Express Plus (GPS-18590) SparkFun RTK Facet (GPS-19029) Depending on the hardware platform different features may or may not be supported. We will denote each product in each section so that you know what is supported. If you have an issue, feature request, bug report, or a general question about the RTK firmware specifically we encourage you to post your comments on the firmware's repository . If you feel like bragging or showing off what you did with your RTK product, we'd be thrilled to hear about it on the issues list as well! Things like how to attach an antenna or other hardware specific topics are best read on the Hookup Guides for the individual products:","title":"Introduction"},{"location":"hardware_rtk_express/","text":"RTK Express The RTK Express is a fully enclosed, preprogrammed device. There are very few things to worry about or configure but we will cover the basics. Buttons The RTK Express uses two buttons, Power and Setup for in-field configuration. Setup This device can be used in four modes: GNSS Positioning (~30cm accuracy) - also known as 'Rover' GNSS Positioning with RTK (1.4cm accuracy) - also known as 'Rover with RTK Fix' GNSS Base Station GNSS Base Station NTRIP Server At power on the device will enter Rover or Base mode; whichever state the device was in at the last power down. When the SETUP button is pressed the RTK Express will toggle between Rover and Base mode. The display will indicate the change with a small car or flag icon. In Rover mode the RTK Express will receive L1 and L2 GNSS signals from the four constellations (GPS, GLONASS, Galileo, and BeiDou) and calculate the position based on these signals. Similar to a standard grade GPS receiver, the RTK Express will output industry standard NMEA sentences at 4Hz and broadcast them over any paired Bluetooth device. The end user will need to parse the NMEA sentences using commonly available mobile apps, GIS products, or embedded devices (there are many open source libraries). Unlike standard grade GPS receivers that have 2500m accuracy, the accuracy in this mode is approximately 300mm horizontal positional accuracy with a good grade L1/L2 antenna. When the device is in Rover mode and RTCM correction data is sent into the radio port or over Bluetooth, the device will automatically enter Positioning with RTK mode. In this mode RTK Express will receive L1/L2 signals from the antenna and correction data from a base station. The receiver will quickly (within a few seconds) obtain RTK float, then fix. The NMEA sentences will have increased accuracy of 14mm horizontal and 10mm vertical accuracy. The RTCM correction data can be obtained from a cellular link to online correction sources or over a radio link to a 2nd RTK Express setup as a base station. In Base mode the device will enter Base Station mode. This is used when the device is mounted to a fixed position (like a tripod or roof). The RTK Express will initiate a survey. After 60 to 120 seconds the survey will complete and the RTK Express will begin transmitting RTCM correction data out the radio port. A base is often used in conjunction with a second RTK Express (or RTK Surveyor) unit set to 'Rover' to obtain the 14mm accuracy. Said differently, the Base sits still and sends correction data to the Rover so that the Rover can output a really accurate position. You\u2019ll create an RTK system without any other setup. Power RTK Express startup display with firmware version number The Power button turns on and off the unit. Press and hold the power button until the display illuminates. Press and hold the power button at any time to turn the unit off. RTK Express showing the battery level The RTK Express has a built-in 1300mAh lithium polymer battery that will enable over 5 hours of field use between charging. If more time is needed a common USB power bank can be attached boosting the field time to 40 hours. Charge LED The Charge LED is located above the Power button. It will illuminate any time there is an external power source and will turn off when the internal battery is charged. With the unit fully powered down, charging takes approximately 1.5 hours from a 1A wall supply or 3 hours from a standard USB port. The RTK Express can run while being charged but it increases the charge time. Using an external USB battery bank to run the device for extended periods or running the device on a permanent wall power source is supported. Connectors The SparkFun RTK Express has a variety of connectors Antenna: This SMA connector is used to connect an L1/L2 type GNSS antenna to the RTK Express. Please realize that a standard GPS antenna does not receive the L2 band signals and will greatly impede the performance of the RTK Express (RTK fixes are nearly impossible). Be sure to use a proper L1/L2 antenna . Configure u-blox: This USB C connector is used for charging the device and/or directly configuring and inspecting the ZED-F9P GNSS receiver using u-center . It\u2019s not necessary in normal operation but is handy for tailoring the receiver to specific applications. As an added perk, the ZED-F9P can be detected automatically by some mobile phones and tablets. If desired, the receiver can be directly connected to a compatible phone or tablet removing the need for a Bluetooth connection. Configure ESP32: This USB C connector is used for charging the device, configuring the device, and reprogramming the ESP32. Various debug messages are printed to this port at 115200bps and a serial menu can be opened to configure advanced settings. Radio: This 4-pin JST connector is used to allow RTCM correction data to flow into the device when it is acting as a rover or out of the device when it is acting as a base. The connector is a 4-pin locking 1.25mm JST SMD connector (part#: SM04B-GHS-TB, mating connector part#: GHR-04V-S). The RTK Express comes with a cable to interface to this connector but additional cables can be purchased. You will most likely connect this port to one of our Serial Telemetry Radios if you don\u2019t have access to a correction source on the internet. The pinout is 3.5-5.5V / TX / RX / GND from left to right as pictured ( pin labels are shown on the board itself ). 3.5V to 5.5V is provided by this connector to power a radio with a voltage that depends on the power source. If USB is connected to the RTK Express then voltage on this port will be 5V (+/-10%). If running off of the internal battery then voltage on this port will vary with the battery voltage ( 3.5V to 4.2V depending on the state of charge). While the port is capable of sourcing up to 2 amps, we do not recommend more than 500mA. This port should not be connected to a power source. Data: This 4-pin JST connector is used to output and input a variety of data to the RTK Express. The connector is a 4-pin locking 1.25mm JST SMD connector (part#: SM04B-GHS-TB, mating connector part#: GHR-04V-S). The RTK Express comes with a cable to interface to this connector but additional cables can be purchased. Internally the Data connector is connected to a digital mux allowing one of four software selectable setups: NMEA - The TX pin outputs any enabled messages (NMEA, UBX, and RTCM) at a default of 460,800bps (configurable 9600 to 921600bps). The RX pin can receive RTCM for RTK and can also receive UBX configuration commands if desired. PPS/Trigger - The TX pin outputs the pulse-per-second signal that is accurate to 30ns RMS. The RX pin is connected to the EXTINT pin on the ZED-F9P allowing for events to be measured with incredibly accurate nano-second resolution. Useful for things like audio triangulation. See the Timemark section of the ZED-F9P integration for more information. I2C - The TX pin operates as SCL, RX pin as SDA on the I2C bus. This allows additional sensors to be connected to the I2C bus. GPIO - The TX pin operates as a DAC capable GPIO on the ESP32. The RX pin operates as a ADC capable input on the ESP32. This is useful for custom applications. Most applications do not need to utilize this port and will send the NMEA position data over Bluetooth. This port can be useful for sending position data to an embedded microcontroller or single board computer. The pinout is 3.3V / TX / RX / GND. 3.3V from left to right as pictured ( pin labels are shown on the board itself ), which is provided by this connector to power a remote device if needed. While the port is capable of sourcing up to 600mA, we do not recommend more than 300mA. This port should not be connected to a power source. microSD: This slot accepts standard microSD cards up to 32GB formatted for FAT16 or FAT32. Logging any of 67 messages at up to 4Hz is supported for all constellations. The following 67 messages are supported for logging: NMEA-DTM NMEA-GBS NMEA-GGA NMEA-GLL NMEA-GNS NMEA-GRS NMEA-GSA NMEA-GST NMEA-GSV NMEA-RMC NMEA-VLW NMEA-VTG NMEA-ZDA NAV-CLOCK NAV-DOP NAV-EOE NAV-GEOFENCE NAV-HPPOSECEF NAV-HPPOSLLH NAV-ODO NAV-ORB NAV-POSECEF NAV-POSLLH NAV-PVT NAV-RELPOSNED NAV-SAT NAV-SIG NAV-STATUS NAV-SVIN NAV-TIMEBDS NAV-TIMEGAL NAV-TIMEGLO NAV-TIMEGPS NAV-TIMELS NAV-TIMEUTC NAV-VELECEF NAV-VELNED RXM-MEASX RXM-RAWX RXM-RLM RXM-RTCM RXM-SFRBX MON-COMMS MON-HW2 MON-HW3 MON-HW MON-IO MON-MSGPP MON-RF MON-RXBUF MON-RXR MON-TXBUF TIM-TM2 TIM-TP TIM-VRFY RTCM3x-1005 RTCM3x-1074 RTCM3x-1077 RTCM3x-1084 RTCM3x-1087 RTCM3x-1094 RTCM3x-1097 RTCM3x-1124 RTCM3x-1127 RTCM3x-1230 RTCM3x-4072-0 RTCM3x-4072-1 Qwiic: This 4-pin Qwiic connector exposes the I2C bus of the ESP32 WROOM module. Currently, there is no firmware support for adding I2C devices to the RTK Express but support may be added in the future. Power The RTK Express has a built in 1300mAh battery and consumes approximately 240mA worst case with Bluetooth connection active, GNSS fully tracking, and a 500mW radio broadcasting. This will allow for around 5.5 hours of use in the field. If more time is needed in the field a standard USB power bank can be attached. If a 10,000mAh bank is attached one can estimate 30 hours of run time assuming 25% is lost to efficiencies of the power bank and charge circuit within RTK Express. The RTK Express can be charged from any USB port or adapter. The charge circuit is rated for 1000mA so USB 2.0 ports will charge at 500mA and USB 3.0+ ports will charge at 1A. To quickly view the state of charge, turn on the unit. The battery icon will indicate the following: 3 bars: >75% capacity remain 2 bars: >50% capacity remain 1 bar: >25% capacity remain 0 bars: <25% capacity remain RTK Express Display showing three battery bars Advanced Features The RTK Express is a hacker\u2019s delight. Under the hood of the RTK Express is an ESP32 WROOM connected to a ZED-F9P as well as some peripheral hardware (LiPo fuel gauge, microSD, etc). It is programmed in Arduino and can be tailored by the end user to fit their needs. -> Click on the image to get a closer look at the Schematic! <- ZED-F9P GNSS Receiver The ZED-F9P GNSS receiver is configured over I 2 C and uses two UARTs to output NMEA (UART1) and input/output RTCM (UART2). In general, the ESP32 harvests the data from the ZED-F9Ps UART1 for Bluetooth transmission and logging to SD. ESP32 The ESP32 uses a standard USB to serial conversion IC ( CH340 ) to program the device. You can use the ESP32 core for Arduino or Espressif\u2019s IoT Development Framework (IDF) . The CH340 automatically resets and puts the ESP32 into bootload mode as needed. However, the reset pin of the ESP32 is brought out to an external 2-pin 0.1\u201d footprint if an external reset button is needed. Note: If you've never connected a CH340 device to your computer before, you may need to install drivers for the USB-to-serial converter. Check out our section on \"How to Install CH340 Drivers\" for help with the installation. Measurement Jumpers To facilitate the measurement of run, charge, and quiescent currents, two measurement jumpers are included. These are normally closed jumpers combined with a 2-pin 0.1\u201d footprint. To take a measurement, cut the jumper and install a 2-pin header and use banana to IC hook cables to a DMM. These can then be closed with a 2-pin jumper . LiPo and Charging The RTK Express houses a standard 1300mAh 3.7V LiPo . The charge circuit is set to 1A so with an appropriate power source, charging an empty battery should take a little over one hour. USB C on the RTK Express is configured for 2A draw so if the user attaches to a USB 3.0 port, the charge circuit should operate near the 1A max. If a user attaches to a USB 2.0 port, the charge circuit will operate at 500mA. This charge circuit also incorporates a 42C upper temperature cutoff to insure the LiPo cannot be charged in dangerous conditions. Fuel Gauge and Accelerometer The MAX17048 is a simple to use fuel gauge IC that gives the user a statement of charge (SOC) that is basically a 0 to 100% report. The MAX17048 has a sophisticated algorithm to figure out what the SOC is based on cell voltage that is beyond the scope of this tutorial but for our purposes, allows us to reliably view the battery level when the unit is on. The RTK Express also incorporates a the LIS2DH12 triple-axis accelerometer to aid in leveling in the field. Qwiic Two Qwiic connectors are included in the unit. The internal Qwiic connector connects to the OLED display attached to the upper lid. The lower Qwiic connector is exposed on the end of the unit. These allow connection to the I 2 C bus on the ESP32. Currently the stock RTK Express does not support any additional Qwiic sensors or display but users may add support for their own application. microSD A microSD socket is situated on the ESP32 SPI bus. Any microSD up to 32GB is supported. RTK Express supports RAWX and NMEA logging to the SD card. Max logging time can also be set (default is 10 hours) to avoid multi-gigabyte text files. For more information about RAWX and doing PPP please see this tutorial . Data Port and Digital Mux The 74HC4052 analog mux controls which digital signals route to the external Data port. This allows a variety of custom end user applications. The most interesting of which is event logging. Because the ZED-F9P has microsecond accuracy of the incoming digital signal, custom firmware can be created to triangulate an event based on the receiver's position and the time delay between multiple captured events. Currently, TM2 event logging is supported. Additionally, this mux can be configured to connect ESP pin 26 (DAC capable) and pin 39 (ADC capable) for end user custom applications.","title":"RTK Express"},{"location":"hardware_rtk_express/#rtk-express","text":"The RTK Express is a fully enclosed, preprogrammed device. There are very few things to worry about or configure but we will cover the basics.","title":"RTK Express"},{"location":"hardware_rtk_express/#buttons","text":"The RTK Express uses two buttons, Power and Setup for in-field configuration.","title":"Buttons"},{"location":"hardware_rtk_express/#setup","text":"This device can be used in four modes: GNSS Positioning (~30cm accuracy) - also known as 'Rover' GNSS Positioning with RTK (1.4cm accuracy) - also known as 'Rover with RTK Fix' GNSS Base Station GNSS Base Station NTRIP Server At power on the device will enter Rover or Base mode; whichever state the device was in at the last power down. When the SETUP button is pressed the RTK Express will toggle between Rover and Base mode. The display will indicate the change with a small car or flag icon. In Rover mode the RTK Express will receive L1 and L2 GNSS signals from the four constellations (GPS, GLONASS, Galileo, and BeiDou) and calculate the position based on these signals. Similar to a standard grade GPS receiver, the RTK Express will output industry standard NMEA sentences at 4Hz and broadcast them over any paired Bluetooth device. The end user will need to parse the NMEA sentences using commonly available mobile apps, GIS products, or embedded devices (there are many open source libraries). Unlike standard grade GPS receivers that have 2500m accuracy, the accuracy in this mode is approximately 300mm horizontal positional accuracy with a good grade L1/L2 antenna. When the device is in Rover mode and RTCM correction data is sent into the radio port or over Bluetooth, the device will automatically enter Positioning with RTK mode. In this mode RTK Express will receive L1/L2 signals from the antenna and correction data from a base station. The receiver will quickly (within a few seconds) obtain RTK float, then fix. The NMEA sentences will have increased accuracy of 14mm horizontal and 10mm vertical accuracy. The RTCM correction data can be obtained from a cellular link to online correction sources or over a radio link to a 2nd RTK Express setup as a base station. In Base mode the device will enter Base Station mode. This is used when the device is mounted to a fixed position (like a tripod or roof). The RTK Express will initiate a survey. After 60 to 120 seconds the survey will complete and the RTK Express will begin transmitting RTCM correction data out the radio port. A base is often used in conjunction with a second RTK Express (or RTK Surveyor) unit set to 'Rover' to obtain the 14mm accuracy. Said differently, the Base sits still and sends correction data to the Rover so that the Rover can output a really accurate position. You\u2019ll create an RTK system without any other setup.","title":"Setup"},{"location":"hardware_rtk_express/#power","text":"RTK Express startup display with firmware version number The Power button turns on and off the unit. Press and hold the power button until the display illuminates. Press and hold the power button at any time to turn the unit off. RTK Express showing the battery level The RTK Express has a built-in 1300mAh lithium polymer battery that will enable over 5 hours of field use between charging. If more time is needed a common USB power bank can be attached boosting the field time to 40 hours.","title":"Power"},{"location":"hardware_rtk_express/#charge-led","text":"The Charge LED is located above the Power button. It will illuminate any time there is an external power source and will turn off when the internal battery is charged. With the unit fully powered down, charging takes approximately 1.5 hours from a 1A wall supply or 3 hours from a standard USB port. The RTK Express can run while being charged but it increases the charge time. Using an external USB battery bank to run the device for extended periods or running the device on a permanent wall power source is supported.","title":"Charge LED"},{"location":"hardware_rtk_express/#connectors","text":"The SparkFun RTK Express has a variety of connectors","title":"Connectors"},{"location":"hardware_rtk_express/#antenna","text":"This SMA connector is used to connect an L1/L2 type GNSS antenna to the RTK Express. Please realize that a standard GPS antenna does not receive the L2 band signals and will greatly impede the performance of the RTK Express (RTK fixes are nearly impossible). Be sure to use a proper L1/L2 antenna .","title":"Antenna:"},{"location":"hardware_rtk_express/#configure-u-blox","text":"This USB C connector is used for charging the device and/or directly configuring and inspecting the ZED-F9P GNSS receiver using u-center . It\u2019s not necessary in normal operation but is handy for tailoring the receiver to specific applications. As an added perk, the ZED-F9P can be detected automatically by some mobile phones and tablets. If desired, the receiver can be directly connected to a compatible phone or tablet removing the need for a Bluetooth connection.","title":"Configure u-blox:"},{"location":"hardware_rtk_express/#configure-esp32","text":"This USB C connector is used for charging the device, configuring the device, and reprogramming the ESP32. Various debug messages are printed to this port at 115200bps and a serial menu can be opened to configure advanced settings.","title":"Configure ESP32:"},{"location":"hardware_rtk_express/#radio","text":"This 4-pin JST connector is used to allow RTCM correction data to flow into the device when it is acting as a rover or out of the device when it is acting as a base. The connector is a 4-pin locking 1.25mm JST SMD connector (part#: SM04B-GHS-TB, mating connector part#: GHR-04V-S). The RTK Express comes with a cable to interface to this connector but additional cables can be purchased. You will most likely connect this port to one of our Serial Telemetry Radios if you don\u2019t have access to a correction source on the internet. The pinout is 3.5-5.5V / TX / RX / GND from left to right as pictured ( pin labels are shown on the board itself ). 3.5V to 5.5V is provided by this connector to power a radio with a voltage that depends on the power source. If USB is connected to the RTK Express then voltage on this port will be 5V (+/-10%). If running off of the internal battery then voltage on this port will vary with the battery voltage ( 3.5V to 4.2V depending on the state of charge). While the port is capable of sourcing up to 2 amps, we do not recommend more than 500mA. This port should not be connected to a power source.","title":"Radio:"},{"location":"hardware_rtk_express/#data","text":"This 4-pin JST connector is used to output and input a variety of data to the RTK Express. The connector is a 4-pin locking 1.25mm JST SMD connector (part#: SM04B-GHS-TB, mating connector part#: GHR-04V-S). The RTK Express comes with a cable to interface to this connector but additional cables can be purchased. Internally the Data connector is connected to a digital mux allowing one of four software selectable setups: NMEA - The TX pin outputs any enabled messages (NMEA, UBX, and RTCM) at a default of 460,800bps (configurable 9600 to 921600bps). The RX pin can receive RTCM for RTK and can also receive UBX configuration commands if desired. PPS/Trigger - The TX pin outputs the pulse-per-second signal that is accurate to 30ns RMS. The RX pin is connected to the EXTINT pin on the ZED-F9P allowing for events to be measured with incredibly accurate nano-second resolution. Useful for things like audio triangulation. See the Timemark section of the ZED-F9P integration for more information. I2C - The TX pin operates as SCL, RX pin as SDA on the I2C bus. This allows additional sensors to be connected to the I2C bus. GPIO - The TX pin operates as a DAC capable GPIO on the ESP32. The RX pin operates as a ADC capable input on the ESP32. This is useful for custom applications. Most applications do not need to utilize this port and will send the NMEA position data over Bluetooth. This port can be useful for sending position data to an embedded microcontroller or single board computer. The pinout is 3.3V / TX / RX / GND. 3.3V from left to right as pictured ( pin labels are shown on the board itself ), which is provided by this connector to power a remote device if needed. While the port is capable of sourcing up to 600mA, we do not recommend more than 300mA. This port should not be connected to a power source.","title":"Data:"},{"location":"hardware_rtk_express/#microsd","text":"This slot accepts standard microSD cards up to 32GB formatted for FAT16 or FAT32. Logging any of 67 messages at up to 4Hz is supported for all constellations. The following 67 messages are supported for logging: NMEA-DTM NMEA-GBS NMEA-GGA NMEA-GLL NMEA-GNS NMEA-GRS NMEA-GSA NMEA-GST NMEA-GSV NMEA-RMC NMEA-VLW NMEA-VTG NMEA-ZDA NAV-CLOCK NAV-DOP NAV-EOE NAV-GEOFENCE NAV-HPPOSECEF NAV-HPPOSLLH NAV-ODO NAV-ORB NAV-POSECEF NAV-POSLLH NAV-PVT NAV-RELPOSNED NAV-SAT NAV-SIG NAV-STATUS NAV-SVIN NAV-TIMEBDS NAV-TIMEGAL NAV-TIMEGLO NAV-TIMEGPS NAV-TIMELS NAV-TIMEUTC NAV-VELECEF NAV-VELNED RXM-MEASX RXM-RAWX RXM-RLM RXM-RTCM RXM-SFRBX MON-COMMS MON-HW2 MON-HW3 MON-HW MON-IO MON-MSGPP MON-RF MON-RXBUF MON-RXR MON-TXBUF TIM-TM2 TIM-TP TIM-VRFY RTCM3x-1005 RTCM3x-1074 RTCM3x-1077 RTCM3x-1084 RTCM3x-1087 RTCM3x-1094 RTCM3x-1097 RTCM3x-1124 RTCM3x-1127 RTCM3x-1230 RTCM3x-4072-0 RTCM3x-4072-1","title":"microSD:"},{"location":"hardware_rtk_express/#qwiic","text":"This 4-pin Qwiic connector exposes the I2C bus of the ESP32 WROOM module. Currently, there is no firmware support for adding I2C devices to the RTK Express but support may be added in the future.","title":"Qwiic:"},{"location":"hardware_rtk_express/#power_1","text":"The RTK Express has a built in 1300mAh battery and consumes approximately 240mA worst case with Bluetooth connection active, GNSS fully tracking, and a 500mW radio broadcasting. This will allow for around 5.5 hours of use in the field. If more time is needed in the field a standard USB power bank can be attached. If a 10,000mAh bank is attached one can estimate 30 hours of run time assuming 25% is lost to efficiencies of the power bank and charge circuit within RTK Express. The RTK Express can be charged from any USB port or adapter. The charge circuit is rated for 1000mA so USB 2.0 ports will charge at 500mA and USB 3.0+ ports will charge at 1A. To quickly view the state of charge, turn on the unit. The battery icon will indicate the following: 3 bars: >75% capacity remain 2 bars: >50% capacity remain 1 bar: >25% capacity remain 0 bars: <25% capacity remain RTK Express Display showing three battery bars","title":"Power"},{"location":"hardware_rtk_express/#advanced-features","text":"The RTK Express is a hacker\u2019s delight. Under the hood of the RTK Express is an ESP32 WROOM connected to a ZED-F9P as well as some peripheral hardware (LiPo fuel gauge, microSD, etc). It is programmed in Arduino and can be tailored by the end user to fit their needs. -> Click on the image to get a closer look at the Schematic! <-","title":"Advanced Features"},{"location":"hardware_rtk_express/#zed-f9p-gnss-receiver","text":"The ZED-F9P GNSS receiver is configured over I 2 C and uses two UARTs to output NMEA (UART1) and input/output RTCM (UART2). In general, the ESP32 harvests the data from the ZED-F9Ps UART1 for Bluetooth transmission and logging to SD.","title":"ZED-F9P GNSS Receiver"},{"location":"hardware_rtk_express/#esp32","text":"The ESP32 uses a standard USB to serial conversion IC ( CH340 ) to program the device. You can use the ESP32 core for Arduino or Espressif\u2019s IoT Development Framework (IDF) . The CH340 automatically resets and puts the ESP32 into bootload mode as needed. However, the reset pin of the ESP32 is brought out to an external 2-pin 0.1\u201d footprint if an external reset button is needed. Note: If you've never connected a CH340 device to your computer before, you may need to install drivers for the USB-to-serial converter. Check out our section on \"How to Install CH340 Drivers\" for help with the installation.","title":"ESP32"},{"location":"hardware_rtk_express/#measurement-jumpers","text":"To facilitate the measurement of run, charge, and quiescent currents, two measurement jumpers are included. These are normally closed jumpers combined with a 2-pin 0.1\u201d footprint. To take a measurement, cut the jumper and install a 2-pin header and use banana to IC hook cables to a DMM. These can then be closed with a 2-pin jumper .","title":"Measurement Jumpers"},{"location":"hardware_rtk_express/#lipo-and-charging","text":"The RTK Express houses a standard 1300mAh 3.7V LiPo . The charge circuit is set to 1A so with an appropriate power source, charging an empty battery should take a little over one hour. USB C on the RTK Express is configured for 2A draw so if the user attaches to a USB 3.0 port, the charge circuit should operate near the 1A max. If a user attaches to a USB 2.0 port, the charge circuit will operate at 500mA. This charge circuit also incorporates a 42C upper temperature cutoff to insure the LiPo cannot be charged in dangerous conditions.","title":"LiPo and Charging"},{"location":"hardware_rtk_express/#fuel-gauge-and-accelerometer","text":"The MAX17048 is a simple to use fuel gauge IC that gives the user a statement of charge (SOC) that is basically a 0 to 100% report. The MAX17048 has a sophisticated algorithm to figure out what the SOC is based on cell voltage that is beyond the scope of this tutorial but for our purposes, allows us to reliably view the battery level when the unit is on. The RTK Express also incorporates a the LIS2DH12 triple-axis accelerometer to aid in leveling in the field.","title":"Fuel Gauge and Accelerometer"},{"location":"hardware_rtk_express/#qwiic_1","text":"Two Qwiic connectors are included in the unit. The internal Qwiic connector connects to the OLED display attached to the upper lid. The lower Qwiic connector is exposed on the end of the unit. These allow connection to the I 2 C bus on the ESP32. Currently the stock RTK Express does not support any additional Qwiic sensors or display but users may add support for their own application.","title":"Qwiic"},{"location":"hardware_rtk_express/#microsd_1","text":"A microSD socket is situated on the ESP32 SPI bus. Any microSD up to 32GB is supported. RTK Express supports RAWX and NMEA logging to the SD card. Max logging time can also be set (default is 10 hours) to avoid multi-gigabyte text files. For more information about RAWX and doing PPP please see this tutorial .","title":"microSD"},{"location":"hardware_rtk_express/#data-port-and-digital-mux","text":"The 74HC4052 analog mux controls which digital signals route to the external Data port. This allows a variety of custom end user applications. The most interesting of which is event logging. Because the ZED-F9P has microsecond accuracy of the incoming digital signal, custom firmware can be created to triangulate an event based on the receiver's position and the time delay between multiple captured events. Currently, TM2 event logging is supported. Additionally, this mux can be configured to connect ESP pin 26 (DAC capable) and pin 39 (ADC capable) for end user custom applications.","title":"Data Port and Digital Mux"},{"location":"hardware_rtk_express_plus/","text":"RTK Express Plus","title":"RTK Express Plus"},{"location":"hardware_rtk_express_plus/#rtk-express-plus","text":"","title":"RTK Express Plus"},{"location":"hardware_rtk_facet/","text":"Facet Hardware Hardware Overview The RTK Facet is a fully enclosed, preprogrammed device. There are very few things to worry about or configure but we will cover the basics. Power/Setup Button The RTK Facet has one button used for both Power and Setup for in-field configuration changes. Pressing and holding the Power button will cause it to power on or off. Short pressing the button will cause the RTK Facet to change modes. This device can be used in four modes: GNSS Positioning (~30cm accuracy) - also known as 'Rover' GNSS Positioning with RTK (1.4cm accuracy) - also known as 'Rover with RTK Fix' GNSS Base Station GNSS Base Station NTRIP Server At Power On the device will enter Rover or Base mode; whichever state the device was in at the last power down. When the POWER/SETUP button is pressed momentarily, a menu is presented to change the RTK Facet to Rover or Base mode. The display will indicate the change with a small car or flag icon. In Rover mode the RTK Facet will receive L1 and L2 GNSS signals from the four constellations (GPS, GLONASS, Galileo, and BeiDou) and calculate the position based on these signals. Similar to a standard grade GPS receiver, the RTK Facet will output industry standard NMEA sentences at 4Hz and broadcast them over any paired Bluetooth device. The end user will need to parse the NMEA sentences using commonly available mobile apps, GIS products, or embedded devices (there are many open source libraries). Unlike standard grade GPS receivers that have 2500m accuracy, the accuracy in this mode is approximately 300mm horizontal positional accuracy with a good grade L1/L2 antenna. When the device is in Rover mode and RTCM correction data is sent over Bluetooth or into the radio port, the device will automatically enter Positioning with RTK mode. In this mode RTK Facet will receive L1/L2 signals from the antenna and correction data from a base station. The receiver will quickly (within a second) obtain RTK float, then fix. The NMEA sentences will have increased accuracy of 14mm horizontal and 10mm vertical accuracy. The RTCM correction data is most easily obtained over the internet using a free app on your phone (see SW Maps or Lefebure NTRIP) and sent over Bluetooth to the RTK Facet but RTCM can also be delivered over an external cellular or radio link to a 2nd RTK Facet setup as a base station. In Base mode the device will enter Base Station mode. This is used when the device is mounted to a fixed position (like a tripod or roof). The RTK Facet will initiate a survey. After 60 to 120 seconds the survey will complete and the RTK Facet will begin transmitting RTCM correction data out the radio port. A base is often used in conjunction with a second RTK Facet (or RTK Surveyor) unit set to 'Rover' to obtain the 14mm accuracy. Said differently, the Base sits still and sends correction data to the Rover so that the Rover can output a really accurate position. You\u2019ll create an RTK system without any other setup. Power RTK Facet startup display with firmware version number The Power button turns on and off the unit. Press and hold the power button until the display illuminates. Press and hold the power button at any time to turn the unit off. RTK Facet showing the battery level The RTK Facet has a large, built-in 6000mAh lithium polymer battery that will enable over 25 hours of field use between charging. If more time is needed a common USB power bank can be attached boosting the field time to any amount needed. Charge LED The Charge LED is located on the front face. It will illuminate any time there is an external power source and will turn off when the internal battery is charged. With the unit fully powered down, charging takes approximately 6 hours from a 1A wall supply or 12 hours from a standard USB port. The RTK Facet can run while being charged but it increases the charge time. Using an external USB battery bank to run the device for extended periods or running the device on a permanent wall power source is supported. Connectors The SparkFun RTK Facet connectors shown with the dust cover removed There are a variety of connectors protected by a dust flap. USB: This USB C connector is used for three purposes: Charging the device Configuring the RTK Facet, and reprogramming the ESP32 Directly configuring and inspecting the ZED-F9P GNSS receiver There is a USB hub built into the RTK Facet. When you attach the device to your computer it will enumerate as two COM ports. In the image above, the USB Serial Device is the ZED-F9P and the USB-SERIAL CH340 is the ESP32. Don't See 'USB-Serial CH340'? If you've never connected a CH340 device to your computer before, you may need to install drivers for the USB-to-serial converter. Check out our section on \"How to Install CH340 Drivers\" for help with the installation. Don't See 'USB Serial Device'? The first time a u-blox module is connected to a computer you may need to adjust the COM driver. Check out our section on \"How to Install u-blox Drivers\" for help with the installation. Configuring the RTK Facet can be done over the USB-Serial CH340 COM port via serial text menu. Various debug messages are printed to this port at 115200bps and a serial menu can be opened to configure advanced settings. Configuring the ZED-F9P can be configured over the USB Serial Device port using u-center . It\u2019s not necessary in normal operation but is handy for tailoring the receiver to specific applications. As an added perk, the ZED-F9P can be detected automatically by some mobile phones and tablets. If desired, the receiver can be directly connected to a compatible phone or tablet removing the need for a Bluetooth connection. Radio: This port is used when an external cellular or radio link is needed. This port is not used if you transfer RTCM from your phone to the RTK Facet over Bluetooth. This 4-pin JST connector can be used to allow RTCM correction data to flow into the device when it is acting as a rover or out of the device when it is acting as a base. The connector is a 4-pin locking 1.25mm JST SMD connector (part#: SM04B-GHS-TB, mating connector part#: GHR-04V-S). The RTK Facet comes with a cable to interface to this connector but additional cables can be purchased. You will most likely connect this port to one of our Serial Telemetry Radios if you don\u2019t have access to a correction source on the internet. The pinout is 3.5-5.5V / TX / RX / GND from left to right as pictured. 3.5V to 5.5V is provided by this connector to power a radio with a voltage that depends on the power source. If USB is connected to the RTK Facet then voltage on this port will be 5V (+/-10%). If running off of the internal battery then voltage on this port will vary with the battery voltage ( 3.5V to 4.2V depending on the state of charge). This port is capable of sourcing up to 600mA and is protected by a PTC (resettable fuse). This port should not be connected to a power source. Data: This port is used when an external system is connected such as a rover, car, timing equipment, camera triggers, etc. This port is not used if you transfer NMEA positional data to your phone from the RTK Facet over Bluetooth. This 4-pin JST connector is used to output and input a variety of data to the RTK Facet. The connector is a 4-pin locking 1.25mm JST SMD connector (part#: SM04B-GHS-TB, mating connector part#: GHR-04V-S). The RTK Facet comes with a cable to interface to this connector but additional cables can be purchased. Internally the Data connector is connected to a digital mux allowing one of four software selectable setups: NMEA - The TX pin outputs any enabled messages (NMEA, UBX, and RTCM) at a default of 460,800bps (configurable 9600 to 921600bps). The RX pin can receive RTCM for RTK and can also receive UBX configuration commands if desired. PPS/Trigger - The TX pin outputs the pulse-per-second signal that is accurate to 30ns RMS. The RX pin is connected to the EXTINT pin on the ZED-F9P allowing for events to be measured with incredibly accurate nano-second resolution. Useful for things like audio triangulation. See the Timemark section of the ZED-F9P integration for more information. I2C - The TX pin operates as SCL, RX pin as SDA on the I2C bus. This allows additional sensors to be connected to the I2C bus. GPIO - The TX pin operates as a DAC capable GPIO on the ESP32. The RX pin operates as a ADC capable input on the ESP32. This is useful for custom applications. Most applications do not need to utilize this port and will send the NMEA position data over Bluetooth. This port can be useful for sending position data to an embedded microcontroller or single board computer. The pinout is 3.3V / TX / RX / GND. 3.3V from left to right as pictured, which is provided by this connector to power a remote device if needed. While the port is capable of sourcing up to 600mA, we do not recommend more than 300mA. This port should not be connected to a power source. microSD: This slot accepts standard microSD cards up to 32GB formatted for FAT16 or FAT32. Logging any of 67 messages at up to 4Hz is supported for all constellations. The following 67 messages are supported for logging: \u2022 NMEA-GSA \u2022 NMEA-GST \u2022 NMEA-GSV \u2022 NMEA-RMC \u2022 NMEA-VLW \u2022 NMEA-VTG \u2022 NMEA-ZDA \u2022 NAV-CLOCK \u2022 NAV-DOP \u2022 NAV-EOE \u2022 NAV-GEOFENCE \u2022 NAV-HPPOSECEF \u2022 NAV-HPPOSLLH \u2022 NAV-ODO \u2022 NAV-ORB \u2022 NAV-POSECEF \u2022 NAV-POSLLH \u2022 NAV-PVT \u2022 NAV-RELPOSNED \u2022 NAV-SAT \u2022 NAV-SIG \u2022 NAV-STATUS \u2022 NAV-SVIN \u2022 NAV-TIMEBDS \u2022 NAV-TIMEGAL \u2022 NAV-TIMEGLO \u2022 NAV-TIMEGPS \u2022 NAV-TIMELS \u2022 NAV-TIMEUTC \u2022 NAV-VELECEF \u2022 NAV-VELNED \u2022 RXM-MEASX \u2022 RXM-RAWX \u2022 RXM-RLM \u2022 RXM-RTCM \u2022 RXM-SFRBX \u2022 MON-COMMS \u2022 MON-HW2 \u2022 MON-HW3 \u2022 MON-HW \u2022 MON-IO \u2022 MON-MSGPP \u2022 MON-RF \u2022 MON-RXBUF \u2022 MON-RXR \u2022 MON-TXBUF \u2022 TIM-TM2 \u2022 TIM-TP \u2022 TIM-VRFY \u2022 RTCM3x-1005 \u2022 RTCM3x-1074 \u2022 RTCM3x-1077 \u2022 RTCM3x-1084 \u2022 RTCM3x-1087 \u2022 RTCM3x-1094 \u2022 RTCM3x-1097 \u2022 RTCM3x-1124 \u2022 RTCM3x-1127 \u2022 RTCM3x-1230 \u2022 RTCM3x-4072-0 \u2022 RTCM3x-4072-1 Qwiic: This 4-pin Qwiic connector exposes the I2C bus of the ESP32 WROOM module. Currently, there is no firmware support for adding I 2 C devices to the RTK Facet but support may be added in the future. Antenna: It's built in! Housed under the dome of the RTK Facet is a surveyor grade L1/L2 antenna. It is the same element found within our GNSS Multi-Band L1/L2 Surveying Antenna . Its datasheet is available here . SparkFun RTK Facet Antenna Reference Points The built in antenna has an ARP of 61.4mm from the base to the measuring point of the L1 antenna and an ARP of 57.4mm to the measuring point of the L2 antenna. Power RTK Facet Display showing three battery bars The RTK Facet has a built in 6000mAh battery and consumes approximately 240mA worst case with Bluetooth connection active and GNSS fully tracking. This will allow for around 25 hours of use in the field. If more time is needed in the field a standard USB power bank can be attached. If a 10,000mAh bank is attached one can estimate 56 hours of run time assuming 25% is lost to efficiencies of the power bank and charge circuit within RTK Facet. The RTK Facet can be charged from any USB port or adapter. The charge circuit is rated for 1000mA so USB 2.0 ports will charge at 500mA and USB 3.0+ ports will charge at 1A. To quickly view the state of charge, turn on the unit. The battery icon will indicate the following: 3 bars: >75% capacity remain 2 bars: >50% capacity remain 1 bar: >25% capacity remain 0 bars: <25% capacity remain Advanced Features The boards that make up the RTK Facet The RTK Facet is a hacker\u2019s delight. Under the hood of the RTK Facet is an ESP32 WROOM connected to a ZED-F9P as well as some peripheral hardware (LiPo fuel gauge, microSD, etc). It is programmed in Arduino and can be tailored by the end user to fit their needs. Click on the image to get a closer look at the Schematic! The Facet with three sub boards, the battery, and antenna ZED-F9P GNSS Receiver The ZED-F9P GNSS receiver is configured over I 2 C and uses two UARTs to output NMEA (UART1) and input/output RTCM (UART2). In general, the ESP32 harvests the data from the ZED-F9Ps UART1 for Bluetooth transmission and logging to SD. ESP32 The ESP32 uses a standard USB to serial conversion IC ( CH340 ) to program the device. You can use the ESP32 core for Arduino or Espressif\u2019s IoT Development Framework (IDF) . The CH340 automatically resets and puts the ESP32 into bootload mode as needed. However, the reset pin of the ESP32 is brought out to an external 2-pin 0.1\u201d footprint if an external reset button is needed. Note: If you've never connected a CH340 device to your computer before, you may need to install drivers for the USB-to-serial converter. Check out our section on \"How to Install CH340 Drivers\" for help with the installation. LiPo and Charging The RTK Facet houses a standard 6000mAh 3.7V LiPo . The charge circuit is set to 1A so with an appropriate power source, charging an empty battery should take a little over six hours. USB C on the RTK Facet is configured for 2A draw so if the user attaches to a USB 3.0 port, the charge circuit should operate near the 1A max. If a user attaches to a USB 2.0 port, the charge circuit will operate at 500mA. This charge circuit also incorporates a 42C upper temperature cutoff to insure the LiPo cannot be charged in dangerous conditions. Fuel Gauge and Accelerometer The MAX17048 is a simple to use fuel gauge IC that gives the user a statement of charge (SOC) that is basically a 0 to 100% report. The MAX17048 has a sophisticated algorithm to figure out what the SOC is based on cell voltage that is beyond the scope of this tutorial but for our purposes, allows us to reliably view the battery level when the unit is on. The RTK Facet also incorporates a the LIS2DH12 triple-axis accelerometer to aid in leveling in the field. Qwiic An internal Qwiic connector is included in the unit for future expansion. Currently the stock RTK Facet does not support any additional Qwiic sensors or display but users may add support for their own application. microSD A microSD socket is situated on the ESP32 SPI bus. Any microSD up to 32GB is supported. RTK Facet supports RAWX and NMEA logging to the SD card. Max logging time can also be set (default is 24 hours) to avoid multi-gigabyte text files. For more information about RAWX and doing PPP please see this tutorial . Data Port and Digital Mux The 74HC4052 analog mux controls which digital signals route to the external Data port. This allows a variety of custom end user applications. The most interesting of which is event logging. Because the ZED-F9P has microsecond accuracy of the incoming digital signal, custom firmware can be created to triangulate an event based on the receiver's position and the time delay between multiple captured events. Currently, TM2 event logging is supported. Additionally, this mux can be configured to connect ESP pin 26 (DAC capable) and pin 39 (ADC capable) for end user custom applications.","title":"Facet Hardware"},{"location":"hardware_rtk_facet/#facet-hardware","text":"","title":"Facet Hardware"},{"location":"hardware_rtk_facet/#hardware-overview","text":"The RTK Facet is a fully enclosed, preprogrammed device. There are very few things to worry about or configure but we will cover the basics.","title":"Hardware Overview"},{"location":"hardware_rtk_facet/#powersetup-button","text":"The RTK Facet has one button used for both Power and Setup for in-field configuration changes. Pressing and holding the Power button will cause it to power on or off. Short pressing the button will cause the RTK Facet to change modes. This device can be used in four modes: GNSS Positioning (~30cm accuracy) - also known as 'Rover' GNSS Positioning with RTK (1.4cm accuracy) - also known as 'Rover with RTK Fix' GNSS Base Station GNSS Base Station NTRIP Server At Power On the device will enter Rover or Base mode; whichever state the device was in at the last power down. When the POWER/SETUP button is pressed momentarily, a menu is presented to change the RTK Facet to Rover or Base mode. The display will indicate the change with a small car or flag icon. In Rover mode the RTK Facet will receive L1 and L2 GNSS signals from the four constellations (GPS, GLONASS, Galileo, and BeiDou) and calculate the position based on these signals. Similar to a standard grade GPS receiver, the RTK Facet will output industry standard NMEA sentences at 4Hz and broadcast them over any paired Bluetooth device. The end user will need to parse the NMEA sentences using commonly available mobile apps, GIS products, or embedded devices (there are many open source libraries). Unlike standard grade GPS receivers that have 2500m accuracy, the accuracy in this mode is approximately 300mm horizontal positional accuracy with a good grade L1/L2 antenna. When the device is in Rover mode and RTCM correction data is sent over Bluetooth or into the radio port, the device will automatically enter Positioning with RTK mode. In this mode RTK Facet will receive L1/L2 signals from the antenna and correction data from a base station. The receiver will quickly (within a second) obtain RTK float, then fix. The NMEA sentences will have increased accuracy of 14mm horizontal and 10mm vertical accuracy. The RTCM correction data is most easily obtained over the internet using a free app on your phone (see SW Maps or Lefebure NTRIP) and sent over Bluetooth to the RTK Facet but RTCM can also be delivered over an external cellular or radio link to a 2nd RTK Facet setup as a base station. In Base mode the device will enter Base Station mode. This is used when the device is mounted to a fixed position (like a tripod or roof). The RTK Facet will initiate a survey. After 60 to 120 seconds the survey will complete and the RTK Facet will begin transmitting RTCM correction data out the radio port. A base is often used in conjunction with a second RTK Facet (or RTK Surveyor) unit set to 'Rover' to obtain the 14mm accuracy. Said differently, the Base sits still and sends correction data to the Rover so that the Rover can output a really accurate position. You\u2019ll create an RTK system without any other setup.","title":"Power/Setup Button"},{"location":"hardware_rtk_facet/#power","text":"RTK Facet startup display with firmware version number The Power button turns on and off the unit. Press and hold the power button until the display illuminates. Press and hold the power button at any time to turn the unit off. RTK Facet showing the battery level The RTK Facet has a large, built-in 6000mAh lithium polymer battery that will enable over 25 hours of field use between charging. If more time is needed a common USB power bank can be attached boosting the field time to any amount needed.","title":"Power"},{"location":"hardware_rtk_facet/#charge-led","text":"The Charge LED is located on the front face. It will illuminate any time there is an external power source and will turn off when the internal battery is charged. With the unit fully powered down, charging takes approximately 6 hours from a 1A wall supply or 12 hours from a standard USB port. The RTK Facet can run while being charged but it increases the charge time. Using an external USB battery bank to run the device for extended periods or running the device on a permanent wall power source is supported.","title":"Charge LED"},{"location":"hardware_rtk_facet/#connectors","text":"The SparkFun RTK Facet connectors shown with the dust cover removed There are a variety of connectors protected by a dust flap.","title":"Connectors"},{"location":"hardware_rtk_facet/#usb","text":"This USB C connector is used for three purposes: Charging the device Configuring the RTK Facet, and reprogramming the ESP32 Directly configuring and inspecting the ZED-F9P GNSS receiver There is a USB hub built into the RTK Facet. When you attach the device to your computer it will enumerate as two COM ports. In the image above, the USB Serial Device is the ZED-F9P and the USB-SERIAL CH340 is the ESP32. Don't See 'USB-Serial CH340'? If you've never connected a CH340 device to your computer before, you may need to install drivers for the USB-to-serial converter. Check out our section on \"How to Install CH340 Drivers\" for help with the installation. Don't See 'USB Serial Device'? The first time a u-blox module is connected to a computer you may need to adjust the COM driver. Check out our section on \"How to Install u-blox Drivers\" for help with the installation. Configuring the RTK Facet can be done over the USB-Serial CH340 COM port via serial text menu. Various debug messages are printed to this port at 115200bps and a serial menu can be opened to configure advanced settings. Configuring the ZED-F9P can be configured over the USB Serial Device port using u-center . It\u2019s not necessary in normal operation but is handy for tailoring the receiver to specific applications. As an added perk, the ZED-F9P can be detected automatically by some mobile phones and tablets. If desired, the receiver can be directly connected to a compatible phone or tablet removing the need for a Bluetooth connection.","title":"USB:"},{"location":"hardware_rtk_facet/#radio","text":"This port is used when an external cellular or radio link is needed. This port is not used if you transfer RTCM from your phone to the RTK Facet over Bluetooth. This 4-pin JST connector can be used to allow RTCM correction data to flow into the device when it is acting as a rover or out of the device when it is acting as a base. The connector is a 4-pin locking 1.25mm JST SMD connector (part#: SM04B-GHS-TB, mating connector part#: GHR-04V-S). The RTK Facet comes with a cable to interface to this connector but additional cables can be purchased. You will most likely connect this port to one of our Serial Telemetry Radios if you don\u2019t have access to a correction source on the internet. The pinout is 3.5-5.5V / TX / RX / GND from left to right as pictured. 3.5V to 5.5V is provided by this connector to power a radio with a voltage that depends on the power source. If USB is connected to the RTK Facet then voltage on this port will be 5V (+/-10%). If running off of the internal battery then voltage on this port will vary with the battery voltage ( 3.5V to 4.2V depending on the state of charge). This port is capable of sourcing up to 600mA and is protected by a PTC (resettable fuse). This port should not be connected to a power source.","title":"Radio:"},{"location":"hardware_rtk_facet/#data","text":"This port is used when an external system is connected such as a rover, car, timing equipment, camera triggers, etc. This port is not used if you transfer NMEA positional data to your phone from the RTK Facet over Bluetooth. This 4-pin JST connector is used to output and input a variety of data to the RTK Facet. The connector is a 4-pin locking 1.25mm JST SMD connector (part#: SM04B-GHS-TB, mating connector part#: GHR-04V-S). The RTK Facet comes with a cable to interface to this connector but additional cables can be purchased. Internally the Data connector is connected to a digital mux allowing one of four software selectable setups: NMEA - The TX pin outputs any enabled messages (NMEA, UBX, and RTCM) at a default of 460,800bps (configurable 9600 to 921600bps). The RX pin can receive RTCM for RTK and can also receive UBX configuration commands if desired. PPS/Trigger - The TX pin outputs the pulse-per-second signal that is accurate to 30ns RMS. The RX pin is connected to the EXTINT pin on the ZED-F9P allowing for events to be measured with incredibly accurate nano-second resolution. Useful for things like audio triangulation. See the Timemark section of the ZED-F9P integration for more information. I2C - The TX pin operates as SCL, RX pin as SDA on the I2C bus. This allows additional sensors to be connected to the I2C bus. GPIO - The TX pin operates as a DAC capable GPIO on the ESP32. The RX pin operates as a ADC capable input on the ESP32. This is useful for custom applications. Most applications do not need to utilize this port and will send the NMEA position data over Bluetooth. This port can be useful for sending position data to an embedded microcontroller or single board computer. The pinout is 3.3V / TX / RX / GND. 3.3V from left to right as pictured, which is provided by this connector to power a remote device if needed. While the port is capable of sourcing up to 600mA, we do not recommend more than 300mA. This port should not be connected to a power source.","title":"Data:"},{"location":"hardware_rtk_facet/#microsd","text":"This slot accepts standard microSD cards up to 32GB formatted for FAT16 or FAT32. Logging any of 67 messages at up to 4Hz is supported for all constellations. The following 67 messages are supported for logging: \u2022 NMEA-GSA \u2022 NMEA-GST \u2022 NMEA-GSV \u2022 NMEA-RMC \u2022 NMEA-VLW \u2022 NMEA-VTG \u2022 NMEA-ZDA \u2022 NAV-CLOCK \u2022 NAV-DOP \u2022 NAV-EOE \u2022 NAV-GEOFENCE \u2022 NAV-HPPOSECEF \u2022 NAV-HPPOSLLH \u2022 NAV-ODO \u2022 NAV-ORB \u2022 NAV-POSECEF \u2022 NAV-POSLLH \u2022 NAV-PVT \u2022 NAV-RELPOSNED \u2022 NAV-SAT \u2022 NAV-SIG \u2022 NAV-STATUS \u2022 NAV-SVIN \u2022 NAV-TIMEBDS \u2022 NAV-TIMEGAL \u2022 NAV-TIMEGLO \u2022 NAV-TIMEGPS \u2022 NAV-TIMELS \u2022 NAV-TIMEUTC \u2022 NAV-VELECEF \u2022 NAV-VELNED \u2022 RXM-MEASX \u2022 RXM-RAWX \u2022 RXM-RLM \u2022 RXM-RTCM \u2022 RXM-SFRBX \u2022 MON-COMMS \u2022 MON-HW2 \u2022 MON-HW3 \u2022 MON-HW \u2022 MON-IO \u2022 MON-MSGPP \u2022 MON-RF \u2022 MON-RXBUF \u2022 MON-RXR \u2022 MON-TXBUF \u2022 TIM-TM2 \u2022 TIM-TP \u2022 TIM-VRFY \u2022 RTCM3x-1005 \u2022 RTCM3x-1074 \u2022 RTCM3x-1077 \u2022 RTCM3x-1084 \u2022 RTCM3x-1087 \u2022 RTCM3x-1094 \u2022 RTCM3x-1097 \u2022 RTCM3x-1124 \u2022 RTCM3x-1127 \u2022 RTCM3x-1230 \u2022 RTCM3x-4072-0 \u2022 RTCM3x-4072-1","title":"microSD:"},{"location":"hardware_rtk_facet/#qwiic","text":"This 4-pin Qwiic connector exposes the I2C bus of the ESP32 WROOM module. Currently, there is no firmware support for adding I 2 C devices to the RTK Facet but support may be added in the future.","title":"Qwiic:"},{"location":"hardware_rtk_facet/#antenna","text":"It's built in! Housed under the dome of the RTK Facet is a surveyor grade L1/L2 antenna. It is the same element found within our GNSS Multi-Band L1/L2 Surveying Antenna . Its datasheet is available here . SparkFun RTK Facet Antenna Reference Points The built in antenna has an ARP of 61.4mm from the base to the measuring point of the L1 antenna and an ARP of 57.4mm to the measuring point of the L2 antenna.","title":"Antenna:"},{"location":"hardware_rtk_facet/#power_1","text":"RTK Facet Display showing three battery bars The RTK Facet has a built in 6000mAh battery and consumes approximately 240mA worst case with Bluetooth connection active and GNSS fully tracking. This will allow for around 25 hours of use in the field. If more time is needed in the field a standard USB power bank can be attached. If a 10,000mAh bank is attached one can estimate 56 hours of run time assuming 25% is lost to efficiencies of the power bank and charge circuit within RTK Facet. The RTK Facet can be charged from any USB port or adapter. The charge circuit is rated for 1000mA so USB 2.0 ports will charge at 500mA and USB 3.0+ ports will charge at 1A. To quickly view the state of charge, turn on the unit. The battery icon will indicate the following: 3 bars: >75% capacity remain 2 bars: >50% capacity remain 1 bar: >25% capacity remain 0 bars: <25% capacity remain","title":"Power"},{"location":"hardware_rtk_facet/#advanced-features","text":"The boards that make up the RTK Facet The RTK Facet is a hacker\u2019s delight. Under the hood of the RTK Facet is an ESP32 WROOM connected to a ZED-F9P as well as some peripheral hardware (LiPo fuel gauge, microSD, etc). It is programmed in Arduino and can be tailored by the end user to fit their needs. Click on the image to get a closer look at the Schematic! The Facet with three sub boards, the battery, and antenna","title":"Advanced Features"},{"location":"hardware_rtk_facet/#zed-f9p-gnss-receiver","text":"The ZED-F9P GNSS receiver is configured over I 2 C and uses two UARTs to output NMEA (UART1) and input/output RTCM (UART2). In general, the ESP32 harvests the data from the ZED-F9Ps UART1 for Bluetooth transmission and logging to SD.","title":"ZED-F9P GNSS Receiver"},{"location":"hardware_rtk_facet/#esp32","text":"The ESP32 uses a standard USB to serial conversion IC ( CH340 ) to program the device. You can use the ESP32 core for Arduino or Espressif\u2019s IoT Development Framework (IDF) . The CH340 automatically resets and puts the ESP32 into bootload mode as needed. However, the reset pin of the ESP32 is brought out to an external 2-pin 0.1\u201d footprint if an external reset button is needed. Note: If you've never connected a CH340 device to your computer before, you may need to install drivers for the USB-to-serial converter. Check out our section on \"How to Install CH340 Drivers\" for help with the installation.","title":"ESP32"},{"location":"hardware_rtk_facet/#lipo-and-charging","text":"The RTK Facet houses a standard 6000mAh 3.7V LiPo . The charge circuit is set to 1A so with an appropriate power source, charging an empty battery should take a little over six hours. USB C on the RTK Facet is configured for 2A draw so if the user attaches to a USB 3.0 port, the charge circuit should operate near the 1A max. If a user attaches to a USB 2.0 port, the charge circuit will operate at 500mA. This charge circuit also incorporates a 42C upper temperature cutoff to insure the LiPo cannot be charged in dangerous conditions.","title":"LiPo and Charging"},{"location":"hardware_rtk_facet/#fuel-gauge-and-accelerometer","text":"The MAX17048 is a simple to use fuel gauge IC that gives the user a statement of charge (SOC) that is basically a 0 to 100% report. The MAX17048 has a sophisticated algorithm to figure out what the SOC is based on cell voltage that is beyond the scope of this tutorial but for our purposes, allows us to reliably view the battery level when the unit is on. The RTK Facet also incorporates a the LIS2DH12 triple-axis accelerometer to aid in leveling in the field.","title":"Fuel Gauge and Accelerometer"},{"location":"hardware_rtk_facet/#qwiic_1","text":"An internal Qwiic connector is included in the unit for future expansion. Currently the stock RTK Facet does not support any additional Qwiic sensors or display but users may add support for their own application.","title":"Qwiic"},{"location":"hardware_rtk_facet/#microsd_1","text":"A microSD socket is situated on the ESP32 SPI bus. Any microSD up to 32GB is supported. RTK Facet supports RAWX and NMEA logging to the SD card. Max logging time can also be set (default is 24 hours) to avoid multi-gigabyte text files. For more information about RAWX and doing PPP please see this tutorial .","title":"microSD"},{"location":"hardware_rtk_facet/#data-port-and-digital-mux","text":"The 74HC4052 analog mux controls which digital signals route to the external Data port. This allows a variety of custom end user applications. The most interesting of which is event logging. Because the ZED-F9P has microsecond accuracy of the incoming digital signal, custom firmware can be created to triangulate an event based on the receiver's position and the time delay between multiple captured events. Currently, TM2 event logging is supported. Additionally, this mux can be configured to connect ESP pin 26 (DAC capable) and pin 39 (ADC capable) for end user custom applications.","title":"Data Port and Digital Mux"},{"location":"hardware_rtk_surveyor/","text":"RTK Surveyor The RTK Surveyor is a fully enclosed, preprogrammed device. There are very few things to worry about or configure but we will cover the basics. Switches Setup This device can be used in three modes: GNSS Positioning (~30cm accuracy) GNSS Positioning with RTK (1.4cm accuracy) GNSS Base Station When the SETUP switch is set to Rover the device will enter Position mode. RTK Surveyor will receive L1 and L2 GNSS signals from the four constellations (GPS, GLONASS, Galileo, and BeiDou) and calculate the position based on these signals. Similar to a standard grade GPS receiver, the RTK Surveyor will output industry standard NMEA sentences at 4Hz and broadcast them over any paired Bluetooth device at 115200bps. The end user will need to parse the NMEA sentences using commonly available mobile apps, GIS products, or embedded devices (there are many open source libraries). Unlike standard grade GPS receivers that have 2500m accuracy, the accuracy in this mode is approximately 300mm horizontal positional accuracy with a good grade L1/L2 antenna. When the SETUP switch is set to Rover and RTCM correction data is sent into the radio port or over Bluetooth, the device will automatically enter Positioning with RTK mode. In this mode RTK Surveyor will receive L1/L2 signals from the antenna and correction data from a base station. The receiver will quickly (within a few seconds) obtain RTK float, then fix. The NMEA sentences will have increased accuracy of 14mm horizontal and 10mm vertical accuracy. The RTCM correction data can be obtained from a cellular link to online correction sources or over a radio link to a 2nd RTK Surveyor setup as a base station. When the SETUP switch is set to Base the device will enter Base Station mode. This is used when the device is mounted to a fixed position (like a tripod or roof). The RTK Surveyor will initiate a survey. After 60 to 120 seconds the survey will complete and the RTK Surveyor will begin transmitting RTCM correction data out the radio port. A base is often used in conjunction with a second unit set to 'Rover' to obtain the 14mm accuracy. Said differently, if you\u2019ve got a radio attached to the base and the rover, you\u2019ll create an RTK system without any other setup and the Rover will output super accurate readings. Power The Power switch is self explanatory. When turned on the LED will turn Green, Yellow, or Red indicating battery level. The RTK Surveyor has a built-in 1000mAh lithium polymer battery that will enable up to 4 hours of field use between charging. If more time is needed a common USB power bank can be attached boosting the field time to 40 hours. LEDs There are a variety of LEDs: Power - Blue when attached to power and charging / off when fully charged. Green/Yellow/Red when the Power switch is turned on indicating the state of charge of the internal battery. RTK - This white LED will be off when no RTCM correction data is received. Blinking indicates RTK Float is achieved. Solid when RTK Fix is achieved. PPS - Pulse per second. This yellow LED will blink at 1Hz when GNSS fix is achieved. You\u2019ll see this LED begin blinking anytime the receiver detects enough satellites to obtain a rough location. PAIR - Blinks blue when waiting to be paired with over Bluetooth. Solid when a connection is active. Horizontal Accuracy 100cm/10cm/1cm - These green LEDs illuminate as the horizontal positional accuracy increases. 100cm will often be achieved in normal positioning mode with a good L1/L2 antenna. 10cm will often be achieved as the first few seconds of RTCM correction data is received, and 1cm will be achieved when a full RTK fix is calculated. BASE - This LED will blink red when the SETUP switch is set to Base and a survey is being conducted. It will turn solid red once the survey is complete and the unit begins broadcasting RTCM correction data. Connectors The SparkFun RTK Surveyor has a variety of connectors Antenna This SMA connector is used to connect an L1/L2 type GNSS antenna to the RTK Surveyor. Please realize that a standard GPS antenna does not receive the L2 band signals and will greatly impede the performance of the RTK Surveyor (RTK fixes are nearly impossible). Be sure to use a proper L1/L2 antenna . Configure u-blox This USB C connector is used for charging the device and/or directly configuring and inspecting the ZED-F9P GNSS receiver using u-center . It\u2019s not necessary in normal operation but is handy for tailoring the receiver to specific applications. As an added perk, the ZED-F9P can be detected automatically by some mobile phones and tablets. If desired, the receiver can be directly connected to a compatible phone or tablet removing the need for a Bluetooth connection. USB Configure ESP32 This USB C connector is used for charging the device, configuring the device, and reprogramming the ESP32. Various debug messages are printed to this port at 115200bps and a serial menu can be opened to configure advanced settings. Radio This 4-pin JST connector is used to allow RTCM correction data to flow into the device when it is acting as a rover or out of the device when it is acting as a base. You will most likely connect this port to one of our Serial Telemetry Radios if you don\u2019t have access to a correction source on the internet. The pinout is 3.5-5.5V / TX / RX / GND. The connector is a 4-pin locking 1.25mm JST SMD connector (part#: SM04B-GHS-TB, mating connector part#: GHR-04V-S). 3.5V to 5.5V is provided by this connector to power a radio with a voltage that depends on the power source. If USB is connected to the RTK Surveyor then voltage on this port will be 5V (+/-10%). If running off of the internal battery then voltage on this port will vary with the battery voltage ( 3.5V to 4.2V depending on the state of charge). While the port is capable of sourcing up to 2 amps, we do not recommend more than 500mA. This port should not be connected to a power source. Data This 4-pin JST connector is used to output NMEA sentences over 115200bps serial. Most applications will send the NMEA position data over Bluetooth. Alternatively, this port can be useful for sending position data to an embedded microcontroller or single board computer. The pinout is 3.3V / TX / RX / GND. The connector is a 4-pin locking 1.25mm JST SMD connector (part#: SM04B-GHS-TB, mating connector part#: GHR-04V-S). 3.3V is provided by this connector to power a remote device if needed. While the port is capable of sourcing up to 600mA, we do not recommend more than 300mA. This port should not be connected to a power source. microSD This slot accepts standard microSD cards up to 32GB formatted for FAT16 or FAT32. Logging NMEA and RAWX data at up to 4Hz is supported for all constellations. Qwiic This 4-pin Qwiic connector exposes the I2C bus of the ESP32 WROOM module. Currently, there is no firmware support for adding I2C devices to the RTK Surveyor but support may be added in the future. Power The RTK Surveyor has a built in 1000mAh battery and consumes approximately 240mA worst case with Bluetooth connection active, GNSS fully tracking, and a 500mW radio broadcasting. This will allow for 4 hours of use in the field. If more time is needed in the field a standard USB power bank can be attached. If a 10,000mAh bank is attached one can estimate 30 hours of run time assuming 25% is lost to efficiencies of the power bank and charge circuit within RTK Surveyor. The RTK Surveyor can be charged from any USB port or adapter. The charge circuit is rated for 1000mA so USB 2.0 ports will charge at 500mA and USB 3.0+ ports will charge at 1A. To quickly view the state of charge, turn on the unit. A green LED indicates > 50% charge remaining. A yellow LED indicates > 10% charge remaining. A red LED indicates less than 10% charge remaining. Advanced Features The RTK Surveyor is a hacker\u2019s delight. Under the hood of the RTK Surveyor is an ESP32 WROOM connected to a ZED-F9P as well as some peripheral hardware (LiPo fuel gauge, microSD, etc). It is programmed in Arduino and can be tailored by the end user to fit their needs. Click on the image to get a closer look at the Schematic ZED-F9P GNSS Receiver The ZED-F9P GNSS receiver is configured over I 2 C and uses two UARTs to output NMEA (UART1) and input/output RTCM (UART2). Two internal slide switches control the flow of NMEA and RTCM traffic between the external connectors and the internal BT UART used on the ESP32. Ostensibly the Bluetooth Broadcast switch can be set to pipe RTCM data to the ESP32\u2019s UART (instead of NMEA) so that correction data can be transmitted over Bluetooth. Point to point Bluetooth radio support is not supported because the useful range of Bluetooth is too short for most RTK applications but may be helpful in some advanced applications. ESP32 The ESP32 uses a standard USB to serial conversion IC ( CH340 ) to program the device. You can use the ESP32 core for Arduino or Espressif\u2019s IoT Development Framework (IDF) . The CH340 automatically resets and puts the ESP32 into bootload mode as needed. However, the reset pin of the ESP32 is brought out to an external 2-pin 0.1\u201d footprint if an external reset button is needed. Note: If you've never connected a CH340 device to your computer before, you may need to install drivers for the USB-to-serial converter. Check out our section on \"How to Install CH340 Drivers\" for help with the installation. Measurement Jumpers To facilitate the measurement of run, charge, and quiescent currents, two measurement jumpers are included. These are normally closed jumpers combined with a 2-pin 0.1\u201d footprint. To take a measurement, cut the jumper and install a 2-pin header and use banana to IC hook cables to a DMM. LiPo and Charging The RTK Surveyor houses a standard 1000mAh 3.7V LiPo . The charge circuit is set to 1A so with an appropriate power source, charging an empty battery should take roughly one hour. USB C on the RTK Surveyor is configured for 2A draw so if the user attaches to a USB 3.0 port, the charge circuit should operate near the 1A max. If a user attaches to a USB 2.0 port, the charge circuit will operate at 500mA. MAX17048 Fuel Gauge The MAX17048 is a simple to use fuel gauge IC that gives the user a statement of charge (SOC) that is basically a 0 to 100% report. The MAX17048 has a sophisticated algorithm to figure out what the SOC is based on cell voltage that is beyond the scope of this tutorial but for our purposes, allows us to control the color of the power LED. Qwiic A Qwiic connector is exposed on the end of the unit. This allows connection to the I 2 C bus on the ESP32. Currently the stock RTK Surveyor does not support any additional Qwiic sensors or display but users may add support for their own application. microSD A microSD socket is situated on the ESP32 SPI bus. Any microSD up to 32GB is supported. RTK Surveyor supports RAWX and NMEA logging to the SD card. Max logging time can also be set (default is 10 hours) to avoid multi-gigabyte text files. For more information about RAWX and doing PPP please see this tutorial .","title":"RTK Surveyor"},{"location":"hardware_rtk_surveyor/#rtk-surveyor","text":"The RTK Surveyor is a fully enclosed, preprogrammed device. There are very few things to worry about or configure but we will cover the basics.","title":"RTK Surveyor"},{"location":"hardware_rtk_surveyor/#switches","text":"","title":"Switches"},{"location":"hardware_rtk_surveyor/#setup","text":"This device can be used in three modes: GNSS Positioning (~30cm accuracy) GNSS Positioning with RTK (1.4cm accuracy) GNSS Base Station When the SETUP switch is set to Rover the device will enter Position mode. RTK Surveyor will receive L1 and L2 GNSS signals from the four constellations (GPS, GLONASS, Galileo, and BeiDou) and calculate the position based on these signals. Similar to a standard grade GPS receiver, the RTK Surveyor will output industry standard NMEA sentences at 4Hz and broadcast them over any paired Bluetooth device at 115200bps. The end user will need to parse the NMEA sentences using commonly available mobile apps, GIS products, or embedded devices (there are many open source libraries). Unlike standard grade GPS receivers that have 2500m accuracy, the accuracy in this mode is approximately 300mm horizontal positional accuracy with a good grade L1/L2 antenna. When the SETUP switch is set to Rover and RTCM correction data is sent into the radio port or over Bluetooth, the device will automatically enter Positioning with RTK mode. In this mode RTK Surveyor will receive L1/L2 signals from the antenna and correction data from a base station. The receiver will quickly (within a few seconds) obtain RTK float, then fix. The NMEA sentences will have increased accuracy of 14mm horizontal and 10mm vertical accuracy. The RTCM correction data can be obtained from a cellular link to online correction sources or over a radio link to a 2nd RTK Surveyor setup as a base station. When the SETUP switch is set to Base the device will enter Base Station mode. This is used when the device is mounted to a fixed position (like a tripod or roof). The RTK Surveyor will initiate a survey. After 60 to 120 seconds the survey will complete and the RTK Surveyor will begin transmitting RTCM correction data out the radio port. A base is often used in conjunction with a second unit set to 'Rover' to obtain the 14mm accuracy. Said differently, if you\u2019ve got a radio attached to the base and the rover, you\u2019ll create an RTK system without any other setup and the Rover will output super accurate readings.","title":"Setup"},{"location":"hardware_rtk_surveyor/#power","text":"The Power switch is self explanatory. When turned on the LED will turn Green, Yellow, or Red indicating battery level. The RTK Surveyor has a built-in 1000mAh lithium polymer battery that will enable up to 4 hours of field use between charging. If more time is needed a common USB power bank can be attached boosting the field time to 40 hours.","title":"Power"},{"location":"hardware_rtk_surveyor/#leds","text":"There are a variety of LEDs: Power - Blue when attached to power and charging / off when fully charged. Green/Yellow/Red when the Power switch is turned on indicating the state of charge of the internal battery. RTK - This white LED will be off when no RTCM correction data is received. Blinking indicates RTK Float is achieved. Solid when RTK Fix is achieved. PPS - Pulse per second. This yellow LED will blink at 1Hz when GNSS fix is achieved. You\u2019ll see this LED begin blinking anytime the receiver detects enough satellites to obtain a rough location. PAIR - Blinks blue when waiting to be paired with over Bluetooth. Solid when a connection is active. Horizontal Accuracy 100cm/10cm/1cm - These green LEDs illuminate as the horizontal positional accuracy increases. 100cm will often be achieved in normal positioning mode with a good L1/L2 antenna. 10cm will often be achieved as the first few seconds of RTCM correction data is received, and 1cm will be achieved when a full RTK fix is calculated. BASE - This LED will blink red when the SETUP switch is set to Base and a survey is being conducted. It will turn solid red once the survey is complete and the unit begins broadcasting RTCM correction data.","title":"LEDs"},{"location":"hardware_rtk_surveyor/#connectors","text":"The SparkFun RTK Surveyor has a variety of connectors","title":"Connectors"},{"location":"hardware_rtk_surveyor/#antenna","text":"This SMA connector is used to connect an L1/L2 type GNSS antenna to the RTK Surveyor. Please realize that a standard GPS antenna does not receive the L2 band signals and will greatly impede the performance of the RTK Surveyor (RTK fixes are nearly impossible). Be sure to use a proper L1/L2 antenna .","title":"Antenna"},{"location":"hardware_rtk_surveyor/#configure-u-blox","text":"This USB C connector is used for charging the device and/or directly configuring and inspecting the ZED-F9P GNSS receiver using u-center . It\u2019s not necessary in normal operation but is handy for tailoring the receiver to specific applications. As an added perk, the ZED-F9P can be detected automatically by some mobile phones and tablets. If desired, the receiver can be directly connected to a compatible phone or tablet removing the need for a Bluetooth connection.","title":"Configure u-blox"},{"location":"hardware_rtk_surveyor/#usb-configure-esp32","text":"This USB C connector is used for charging the device, configuring the device, and reprogramming the ESP32. Various debug messages are printed to this port at 115200bps and a serial menu can be opened to configure advanced settings.","title":"USB Configure ESP32"},{"location":"hardware_rtk_surveyor/#radio","text":"This 4-pin JST connector is used to allow RTCM correction data to flow into the device when it is acting as a rover or out of the device when it is acting as a base. You will most likely connect this port to one of our Serial Telemetry Radios if you don\u2019t have access to a correction source on the internet. The pinout is 3.5-5.5V / TX / RX / GND. The connector is a 4-pin locking 1.25mm JST SMD connector (part#: SM04B-GHS-TB, mating connector part#: GHR-04V-S). 3.5V to 5.5V is provided by this connector to power a radio with a voltage that depends on the power source. If USB is connected to the RTK Surveyor then voltage on this port will be 5V (+/-10%). If running off of the internal battery then voltage on this port will vary with the battery voltage ( 3.5V to 4.2V depending on the state of charge). While the port is capable of sourcing up to 2 amps, we do not recommend more than 500mA. This port should not be connected to a power source.","title":"Radio"},{"location":"hardware_rtk_surveyor/#data","text":"This 4-pin JST connector is used to output NMEA sentences over 115200bps serial. Most applications will send the NMEA position data over Bluetooth. Alternatively, this port can be useful for sending position data to an embedded microcontroller or single board computer. The pinout is 3.3V / TX / RX / GND. The connector is a 4-pin locking 1.25mm JST SMD connector (part#: SM04B-GHS-TB, mating connector part#: GHR-04V-S). 3.3V is provided by this connector to power a remote device if needed. While the port is capable of sourcing up to 600mA, we do not recommend more than 300mA. This port should not be connected to a power source.","title":"Data"},{"location":"hardware_rtk_surveyor/#microsd","text":"This slot accepts standard microSD cards up to 32GB formatted for FAT16 or FAT32. Logging NMEA and RAWX data at up to 4Hz is supported for all constellations.","title":"microSD"},{"location":"hardware_rtk_surveyor/#qwiic","text":"This 4-pin Qwiic connector exposes the I2C bus of the ESP32 WROOM module. Currently, there is no firmware support for adding I2C devices to the RTK Surveyor but support may be added in the future.","title":"Qwiic"},{"location":"hardware_rtk_surveyor/#power_1","text":"The RTK Surveyor has a built in 1000mAh battery and consumes approximately 240mA worst case with Bluetooth connection active, GNSS fully tracking, and a 500mW radio broadcasting. This will allow for 4 hours of use in the field. If more time is needed in the field a standard USB power bank can be attached. If a 10,000mAh bank is attached one can estimate 30 hours of run time assuming 25% is lost to efficiencies of the power bank and charge circuit within RTK Surveyor. The RTK Surveyor can be charged from any USB port or adapter. The charge circuit is rated for 1000mA so USB 2.0 ports will charge at 500mA and USB 3.0+ ports will charge at 1A. To quickly view the state of charge, turn on the unit. A green LED indicates > 50% charge remaining. A yellow LED indicates > 10% charge remaining. A red LED indicates less than 10% charge remaining.","title":"Power"},{"location":"hardware_rtk_surveyor/#advanced-features","text":"The RTK Surveyor is a hacker\u2019s delight. Under the hood of the RTK Surveyor is an ESP32 WROOM connected to a ZED-F9P as well as some peripheral hardware (LiPo fuel gauge, microSD, etc). It is programmed in Arduino and can be tailored by the end user to fit their needs. Click on the image to get a closer look at the Schematic","title":"Advanced Features"},{"location":"hardware_rtk_surveyor/#zed-f9p-gnss-receiver","text":"The ZED-F9P GNSS receiver is configured over I 2 C and uses two UARTs to output NMEA (UART1) and input/output RTCM (UART2). Two internal slide switches control the flow of NMEA and RTCM traffic between the external connectors and the internal BT UART used on the ESP32. Ostensibly the Bluetooth Broadcast switch can be set to pipe RTCM data to the ESP32\u2019s UART (instead of NMEA) so that correction data can be transmitted over Bluetooth. Point to point Bluetooth radio support is not supported because the useful range of Bluetooth is too short for most RTK applications but may be helpful in some advanced applications.","title":"ZED-F9P GNSS Receiver"},{"location":"hardware_rtk_surveyor/#esp32","text":"The ESP32 uses a standard USB to serial conversion IC ( CH340 ) to program the device. You can use the ESP32 core for Arduino or Espressif\u2019s IoT Development Framework (IDF) . The CH340 automatically resets and puts the ESP32 into bootload mode as needed. However, the reset pin of the ESP32 is brought out to an external 2-pin 0.1\u201d footprint if an external reset button is needed. Note: If you've never connected a CH340 device to your computer before, you may need to install drivers for the USB-to-serial converter. Check out our section on \"How to Install CH340 Drivers\" for help with the installation.","title":"ESP32"},{"location":"hardware_rtk_surveyor/#measurement-jumpers","text":"To facilitate the measurement of run, charge, and quiescent currents, two measurement jumpers are included. These are normally closed jumpers combined with a 2-pin 0.1\u201d footprint. To take a measurement, cut the jumper and install a 2-pin header and use banana to IC hook cables to a DMM.","title":"Measurement Jumpers"},{"location":"hardware_rtk_surveyor/#lipo-and-charging","text":"The RTK Surveyor houses a standard 1000mAh 3.7V LiPo . The charge circuit is set to 1A so with an appropriate power source, charging an empty battery should take roughly one hour. USB C on the RTK Surveyor is configured for 2A draw so if the user attaches to a USB 3.0 port, the charge circuit should operate near the 1A max. If a user attaches to a USB 2.0 port, the charge circuit will operate at 500mA.","title":"LiPo and Charging"},{"location":"hardware_rtk_surveyor/#max17048-fuel-gauge","text":"The MAX17048 is a simple to use fuel gauge IC that gives the user a statement of charge (SOC) that is basically a 0 to 100% report. The MAX17048 has a sophisticated algorithm to figure out what the SOC is based on cell voltage that is beyond the scope of this tutorial but for our purposes, allows us to control the color of the power LED.","title":"MAX17048 Fuel Gauge"},{"location":"hardware_rtk_surveyor/#qwiic_1","text":"A Qwiic connector is exposed on the end of the unit. This allows connection to the I 2 C bus on the ESP32. Currently the stock RTK Surveyor does not support any additional Qwiic sensors or display but users may add support for their own application.","title":"Qwiic"},{"location":"hardware_rtk_surveyor/#microsd_1","text":"A microSD socket is situated on the ESP32 SPI bus. Any microSD up to 32GB is supported. RTK Surveyor supports RAWX and NMEA logging to the SD card. Max logging time can also be set (default is 10 hours) to avoid multi-gigabyte text files. For more information about RAWX and doing PPP please see this tutorial .","title":"microSD"},{"location":"menu_system_status/","text":"System Status Menu Showing various attributes of the system The System Status menu will show a large number of system parameters including a full system check to verify what is and what is not online. For example, if an SD card is detected it will be shown as online. Not all systems have all hardware. For example, the RTK Surveyor does not have an accelerometer so it will always be shown offline. This menu is helpful when reporting technical issues or requesting support as it displays helpful information about the current ZED-F9x firmware version, and which parts of the unit are online. Pressing 'r' will allow a user to reset all settings to default including a factory reset of the ZED-F9x receiver. This can be helpful is the unit has been configured into an unknown or problematic state. Pressing 'd' will enter a debug menu that is for advanced users.","title":"System Status Menu"},{"location":"menu_system_status/#system-status-menu","text":"Showing various attributes of the system The System Status menu will show a large number of system parameters including a full system check to verify what is and what is not online. For example, if an SD card is detected it will be shown as online. Not all systems have all hardware. For example, the RTK Surveyor does not have an accelerometer so it will always be shown offline. This menu is helpful when reporting technical issues or requesting support as it displays helpful information about the current ZED-F9x firmware version, and which parts of the unit are online. Pressing 'r' will allow a user to reset all settings to default including a factory reset of the ZED-F9x receiver. This can be helpful is the unit has been configured into an unknown or problematic state. Pressing 'd' will enter a debug menu that is for advanced users.","title":"System Status Menu"},{"location":"system_configuration/","text":"System Configuration Surveyor: Yes / Express: Yes / Express Plus: Yes / Facet: Yes All device settings are stored both in internal memory and an SD card if one is detected. The device will load the latest settings at each power on. If there is a discrepancy between the internal settings and a settings file then the settings file will be used. This allows a collection of RTK products to be identically configured using one 'golden' settings file loaded onto an SD card. There are three ways to configure an RTK product: WiFi - Good for in field changes Serial Terminal - Requires a computer but allows for all configuration settings Settings File - Error Prone; for very advanced users only. The serial terminal method is recommended for most advanced configurations. Most, but not all settings are also available over WiFi but can be tricky to input via mobile phone.","title":"System Configuration"},{"location":"system_configuration/#system-configuration","text":"Surveyor: Yes / Express: Yes / Express Plus: Yes / Facet: Yes All device settings are stored both in internal memory and an SD card if one is detected. The device will load the latest settings at each power on. If there is a discrepancy between the internal settings and a settings file then the settings file will be used. This allows a collection of RTK products to be identically configured using one 'golden' settings file loaded onto an SD card. There are three ways to configure an RTK product: WiFi - Good for in field changes Serial Terminal - Requires a computer but allows for all configuration settings Settings File - Error Prone; for very advanced users only. The serial terminal method is recommended for most advanced configurations. Most, but not all settings are also available over WiFi but can be tricky to input via mobile phone.","title":"System Configuration"},{"location":"update_GUI/","text":"Graphic User Interface","title":"Graphic User Interface"},{"location":"update_GUI/#graphic-user-interface","text":"","title":"Graphic User Interface"},{"location":"update_custom/","text":"Creating Custom Firmware The RTK Facet is an ESP32 and high-precision GNSS hackers\u2019s delight. Writing custom firmware can be done using Arduino. Selecting ESP32 Dev Module Please see the ESP32 Thing Plus Hookup Guide for information about getting Arduino setup. The only difference is that you will need to select ESP32 Dev Module as your board. Arduino Library Links Pull the entire RTK Firmware repo and open /Firmware/RTK_Surveyor/RTK_Surveyor.ino and Arduino will open all the sub-files in new tabs. We\u2019ve broken the functional pieces into smaller tabs to help users navigate it. There are a handful of libraries that will need to be installed. To make this easier, we\u2019ve placed a link next to each library that will automatically open the Arduino Library Manager with that library ready for download. After connecting a USB C cable to the ESP32 Config connector and selecting the correct COM port you should be able to upload new firmware through the Arduino IDE. Note: The RTK Facet must be turned on for it to enumerate as a COM port.","title":"Creating Custom Firmware"},{"location":"update_custom/#creating-custom-firmware","text":"The RTK Facet is an ESP32 and high-precision GNSS hackers\u2019s delight. Writing custom firmware can be done using Arduino. Selecting ESP32 Dev Module Please see the ESP32 Thing Plus Hookup Guide for information about getting Arduino setup. The only difference is that you will need to select ESP32 Dev Module as your board. Arduino Library Links Pull the entire RTK Firmware repo and open /Firmware/RTK_Surveyor/RTK_Surveyor.ino and Arduino will open all the sub-files in new tabs. We\u2019ve broken the functional pieces into smaller tabs to help users navigate it. There are a handful of libraries that will need to be installed. To make this easier, we\u2019ve placed a link next to each library that will automatically open the Arduino Library Manager with that library ready for download. After connecting a USB C cable to the ESP32 Config connector and selecting the correct COM port you should be able to upload new firmware through the Arduino IDE. Note: The RTK Facet must be turned on for it to enumerate as a COM port.","title":"Creating Custom Firmware"},{"location":"update_intro/","text":"Firmware Updates The RTK Facet is open source hardware meaning you have total access to the firmware and hardware . Be sure to checkout each repo for the latest firmware and hardware information. But for those who want to jump right in and tweak the firmware, we will discuss various methods. [ Main Menu showing RTK Firmware v1.8-Oct 7 2021 You can check your firmware by opening the main menu by pressing a key at any time.","title":"Firmware Updates"},{"location":"update_intro/#firmware-updates","text":"The RTK Facet is open source hardware meaning you have total access to the firmware and hardware . Be sure to checkout each repo for the latest firmware and hardware information. But for those who want to jump right in and tweak the firmware, we will discuss various methods. [ Main Menu showing RTK Firmware v1.8-Oct 7 2021 You can check your firmware by opening the main menu by pressing a key at any time.","title":"Firmware Updates"},{"location":"update_sd/","text":"Updating Firmware From the SD Card Firmware update taking place From time to time SparkFun will release new firmware for the RTK Facet to add and improve functionality. For most users, firmware can be upgraded by loading the appropriate firmware file from the binaries repo folder onto the SD card and bringing up the firmware menu as shown above. The firmware upgrade menu will only display files that have the \"RTK_Surveyor_Firmware*.bin\" file name format so don't change the file names once loaded onto the SD card. Select the firmware you'd like to load and the system will proceed to load the new firmware, then reboot. Note: The firmware is called RTK_Surveyor_Firmware_vXX.bin even though this product is called the RTK Facet . We united the different platforms into one. The RTK Firmware runs on all our RTK products.","title":"Updating Firmware From the SD Card"},{"location":"update_sd/#updating-firmware-from-the-sd-card","text":"Firmware update taking place From time to time SparkFun will release new firmware for the RTK Facet to add and improve functionality. For most users, firmware can be upgraded by loading the appropriate firmware file from the binaries repo folder onto the SD card and bringing up the firmware menu as shown above. The firmware upgrade menu will only display files that have the \"RTK_Surveyor_Firmware*.bin\" file name format so don't change the file names once loaded onto the SD card. Select the firmware you'd like to load and the system will proceed to load the new firmware, then reboot. Note: The firmware is called RTK_Surveyor_Firmware_vXX.bin even though this product is called the RTK Facet . We united the different platforms into one. The RTK Firmware runs on all our RTK products.","title":"Updating Firmware From the SD Card"},{"location":"update_serial/","text":"Updating Firmware From CLI The command line interface is also available for more advanced users or users who want to avoid the hassle of swapping out SD cards. You\u2019ll need to download esptool.exe and RTK_Surveyor_Firmware_vXXX_Combined.bin from the repo . Connect a USB A to C cable from your computer to the ESP32 port on the RTK Facet. Now identify the com port the RTK Enumerated at. The easiest way to do this is to open the device manager: CH340 is on COM6 as shown in Device Manager If the COM port is not showing be sure the unit is turned On . If an unknown device is appearing, you\u2019ll need to install drivers for the CH340 . Once you know the COM port, open a command prompt (Windows button + r then type \u2018cmd\u2019). Navigate to the directory that contains the firmware file and esptool.exe. Run the following command: language:c esptool.exe --chip esp32 --port COM6 --baud 921600 --before default_reset --after hard_reset write_flash -z --flash_mode dio --flash_freq 80m --flash_size detect 0 RTK_Surveyor_Firmware_v19_combined.bin Note: You will need to modify COM6 to match the serial port that RTK Facet enumerates at. Programming via the esptool CLI Upon completion, your RTK Facet will have the latest and greatest features!","title":"Updating Firmware From CLI"},{"location":"update_serial/#updating-firmware-from-cli","text":"The command line interface is also available for more advanced users or users who want to avoid the hassle of swapping out SD cards. You\u2019ll need to download esptool.exe and RTK_Surveyor_Firmware_vXXX_Combined.bin from the repo . Connect a USB A to C cable from your computer to the ESP32 port on the RTK Facet. Now identify the com port the RTK Enumerated at. The easiest way to do this is to open the device manager: CH340 is on COM6 as shown in Device Manager If the COM port is not showing be sure the unit is turned On . If an unknown device is appearing, you\u2019ll need to install drivers for the CH340 . Once you know the COM port, open a command prompt (Windows button + r then type \u2018cmd\u2019). Navigate to the directory that contains the firmware file and esptool.exe. Run the following command: language:c esptool.exe --chip esp32 --port COM6 --baud 921600 --before default_reset --after hard_reset write_flash -z --flash_mode dio --flash_freq 80m --flash_size detect 0 RTK_Surveyor_Firmware_v19_combined.bin Note: You will need to modify COM6 to match the serial port that RTK Facet enumerates at. Programming via the esptool CLI Upon completion, your RTK Facet will have the latest and greatest features!","title":"Updating Firmware From CLI"},{"location":"update_wifi/","text":"Updating Firmware From WiFi Note: Firmware versions 1.1 to 1.9 have an issue that severely limit firmware upload over WiFi and is not recommended; use the 'Updating Firmware From the SD Card' method instead. Firmware versions v1.10 and beyond support direct firmware update via WiFi and is the preferred method for updating the firmware on a unit. Advanced system settings Alternatively, firmware may be uploaded via the WiFi AP interface. Versions 1.1 to 1.9: For firmware versions 1.1 to 1.9, the upload process is limited in speed resulting in upload times of nearly 2 minutes. Because of this, we recommend using the 'Updating Firmware From the SD Card' method instead. If you do upload firmware over WiFi, once it has been uploaded it will be viewable on the 'Available Firmware' on the page. To prevent accidental loading the Enable Firmware Update checkbox must first be checked before the button is enabled. Versions 1.10 and Greater: Firmware may be uploaded to the unit by clicking on 'Choose File', selecting the binary such as 'RTK_Surveyor_Firmware_v1_xx.bin' and pressing upload. The unit will automatically reset once firmware upload is complete.","title":"Updating Firmware From WiFi"},{"location":"update_wifi/#updating-firmware-from-wifi","text":"Note: Firmware versions 1.1 to 1.9 have an issue that severely limit firmware upload over WiFi and is not recommended; use the 'Updating Firmware From the SD Card' method instead. Firmware versions v1.10 and beyond support direct firmware update via WiFi and is the preferred method for updating the firmware on a unit. Advanced system settings Alternatively, firmware may be uploaded via the WiFi AP interface. Versions 1.1 to 1.9: For firmware versions 1.1 to 1.9, the upload process is limited in speed resulting in upload times of nearly 2 minutes. Because of this, we recommend using the 'Updating Firmware From the SD Card' method instead. If you do upload firmware over WiFi, once it has been uploaded it will be viewable on the 'Available Firmware' on the page. To prevent accidental loading the Enable Firmware Update checkbox must first be checked before the button is enabled. Versions 1.10 and Greater: Firmware may be uploaded to the unit by clicking on 'Choose File', selecting the binary such as 'RTK_Surveyor_Firmware_v1_xx.bin' and pressing upload. The unit will automatically reset once firmware upload is complete.","title":"Updating Firmware From WiFi"}]}